
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AMPERSAND AND APPEND ASSIGN BOOL BREAK CASE CHARSTRING COLON COMMA CONST CONTINUE DECREMENT DEFAULT DIFFERENT DIVIDE DIVIDEASSIGN ELSE EQUALS FALSE FLOAT FLOAT32 FLOAT64 FOR FORMATSTRING FUNCTION GREATER GREATEREQUALS IDENTIFIER IF IMPORT INCREMENT INPUT INT INT32 INT64 LBRACE LBRACKET LESS LESSEQUALS LPAREN MAIN MAKE MAP MINUS MINUSASSIGN MOD MODASSIGN NOT OR PACKAGE PERIOD PLUS PLUSASSIGN PRINT PRINTF RANGE RBRACE RBRACKET RETURN RPAREN SEMICOLON SHORTASSIGN STRING STRUCT SWITCH TEXT TIMES TIMESASSIGN TRUE TYPE VAR VARIABLEstatement : blocks\n                 | import blocks\n                 | package blocks\n                 | package import blocks\n                 | main LBRACE blocks RBRACE\n                 | package main LBRACE blocks RBRACE\n                 | import main LBRACE blocks RBRACE\n                 | package import main LBRACE blocks RBRACEimport :\n              | IMPORT CHARSTRING\n              | IMPORT LPAREN values_for_import RPARENvalues_for_import : CHARSTRING\n                         | CHARSTRING values_for_importpackage : PACKAGE VARIABLE\n               | PACKAGE MAINmain : FUNCTION MAIN LPAREN RPARENblocks : block\n              | block blocks\n              | block SEMICOLON blocksblock : print_statement\n             | input_statement\n             | operation\n             | data_structure\n             | control_structure\n             | function\n             | parameters\n             | variable_declaration\n             | variable_assignation\n             | return\n             variable_declaration : VAR VARIABLE type\n                            | VAR VARIABLE type ASSIGN valuevariable_declaration : VARIABLE SHORTASSIGN value\n                            | VARIABLE SHORTASSIGN operationvariable_declaration : VAR variables type\n                            | VAR variables type ASSIGN valuevariable_declaration : CONST VARIABLE ASSIGN valuevariable_assignation : VARIABLE assignation value\n                            | VARIABLE assignation operationvariable_assignation : VARIABLE double_operatorvariable_assignation : variables assignation valuevariable_assignation : map_assign\n                            | array_assignvariables : VARIABLE\n                 | VARIABLE COMMA variablesassignation : ASSIGN\n                   | PLUSASSIGN\n                   | MINUSASSIGN\n                   | TIMESASSIGN\n                   | DIVIDEASSIGN\n                   | MODASSIGN\n                   function : FUNCTION VARIABLE LPAREN RPAREN LBRACE blocks RBRACE   \n                | FUNCTION VARIABLE LPAREN parameters RPAREN LBRACE blocks RBRACE\n                | FUNCTION VARIABLE LPAREN RPAREN type LBRACE RBRACE\n                | FUNCTION VARIABLE LPAREN parameters RPAREN type LBRACE RBRACE\n                | FUNCTION VARIABLE LPAREN parameters RPAREN type LBRACE blocks RBRACE\n                | FUNCTION VARIABLE LPAREN RPAREN type LBRACE blocks RBRACE\n                return : RETURN values\n              | RETURN value LBRACKET value RBRACKET\n              | RETURN value PERIOD value\n              | RETURN TRUE\n              | RETURN FALSEvalues : value \n              | value COMMA valuesvalue : VARIABLE\n             | VARIABLE LBRACKET RBRACKET\n             | VARIABLE LBRACKET value RBRACKET\n             | not_variable_value not_variable_value : CHARSTRING\n                           | numbernumber : INT\n              | FLOATprint_statement : PRINT LPAREN values RPAREN\n                       | PRINTF LPAREN FORMATSTRING COMMA values RPAREN\n                       | PRINT LPAREN operation RPAREN\n                       | PRINT LPAREN RPARENinput_statement : INPUT LPAREN values RPAREN\n                       | INPUT LPAREN operation RPAREN\n                       | INPUT LPAREN RPARENoperation : value operator valueoperation : value operator LPAREN value RPAREN\n                 | LPAREN value RPAREN operator value\n                 | LPAREN value operator value RPAREN\n                 | value operator operation\n                 | LPAREN value operator operation RPAREN\n                 | LPAREN value RPAREN operator operation\n                 | value operator LPAREN operation RPARENoperation : value double_operatoroperator : PLUS\n                | MINUS\n                | TIMES\n                | DIVIDE\n                | ASSIGNdouble_operator : INCREMENT\n                       | DECREMENTparameters : parameter\n                  | parameter COMMA parameters\n                  parameter : VARIABLE typetype : INT\n            | INT32\n            | INT64\n            | STRING\n            | FLOAT\n            | FLOAT32\n            | FLOAT64\n            | BOOL\n            control_structure : conditional_structure\n                         | for_estructure\n                         | switch_structureconditional_structure : IF conditions conditional_body\n                             | IF conditions conditional_body ELSE conditional_body\n                             | IF conditions conditional_body ELSE IF conditions conditional_body ELSE conditional_bodyconditional_body : LBRACE statement RBRACE\n                        | LBRACE BREAK RBRACE\n                        | LBRACE CONTINUE RBRACEconditions : condition\n                  | condition logical_operator conditions\n                  condition : value relational_operator valuelogical_operator : AND\n                        | OR\n                        | NOTrelational_operator : GREATER\n                           | LESS\n                           | GREATEREQUALS\n                           | LESSEQUALS\n                           | EQUALS\n                           | DIFFERENT\n    for_estructure : for_initialization\n                      | for_infinite_bucle\n                      | for_iteratorfor_initialization : FOR VARIABLE SHORTASSIGN value SEMICOLON condition SEMICOLON value double_operator LBRACE statement RBRACEfor_infinite_bucle : FOR LBRACE statement RBRACEfor_iterator : FOR VARIABLE COMMA VARIABLE SHORTASSIGN RANGE VARIABLE LBRACE statement RBRACEswitch_structure : SWITCH switch_expression LBRACE case_blocks RBRACEswitch_expression : VARIABLE SHORTASSIGN value\n                         | emptycase_blocks : case_block\n                   | case_block case_blockscase_block : CASE values COLON statement\n                  | DEFAULT COLON statementempty :data_structure : array_structure\n                      | map_structure\n                      | slice_structure\n                      | struct_structurestruct_structure : TYPE VARIABLE STRUCT LBRACE struct_fields RBRACEstruct_fields : struct_field\n                     | struct_field struct_fieldsstruct_field : VARIABLE typearray_structure : VAR VARIABLE LBRACKET INT RBRACKET type\n                       | VAR VARIABLE ASSIGN LBRACKET INT RBRACKET type LBRACE values RBRACE\n                      array_assign : VARIABLE LBRACKET INT RBRACKET ASSIGN valuemap_structure : VARIABLE SHORTASSIGN MAP LBRACKET type RBRACKET type LBRACE map_values RBRACE\n                      | VARIABLE SHORTASSIGN MAKE LPAREN MAP LBRACKET type RBRACKET type RPARENmap_values : map_value\n                  | map_value COMMA map_valuesmap_value : value COLON valuemap_assign : VARIABLE LBRACKET value RBRACKET ASSIGN valueslice_structure : VARIABLE SHORTASSIGN LBRACKET RBRACKET type LBRACE values RBRACE\n                       | VAR VARIABLE LBRACKET RBRACKET type\n                       | VARIABLE SHORTASSIGN LBRACKET RBRACKET type\n                       | VARIABLE ASSIGN append_statementappend_statement : APPEND LPAREN VARIABLE COMMA values RPAREN\n                        | APPEND LPAREN VARIABLE COMMA LBRACKET RBRACKET type LBRACE values RBRACE RPAREN'
    
_lr_action_items = {'FUNCTION':([0,3,4,6,8,13,14,15,16,17,18,19,20,21,22,27,28,29,30,31,32,33,34,38,39,41,42,45,46,47,49,51,55,57,59,61,64,65,66,69,71,74,80,81,82,83,84,85,86,87,88,95,107,108,109,110,119,120,123,131,132,136,137,138,141,148,153,155,157,158,160,163,164,170,171,189,192,207,208,210,211,219,221,222,223,238,242,243,244,245,246,248,253,258,259,260,263,264,265,270,271,272,273,274,277,284,285,288,289,291,295,297,300,309,310,313,320,322,324,325,326,331,337,339,342,345,347,348,349,355,356,],[12,12,12,60,-68,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-141,-142,-143,-144,-106,-107,-108,-95,-41,-42,-67,-70,-127,-128,-129,-69,-71,12,60,60,-10,-64,-14,-15,-39,-97,-98,-93,-94,-99,-100,-101,-102,-103,-104,-105,-87,-57,-62,-60,-61,12,60,60,-32,-33,-37,-38,-65,-161,-75,-78,-79,-83,-96,-30,-34,-40,-109,12,60,-11,-72,-74,-76,-77,-36,-59,-62,-63,-131,-81,-85,-82,-84,-66,-160,60,-80,-86,-31,-159,-35,-58,-110,-112,-113,-114,-133,12,-157,-151,60,60,-73,-149,-145,12,-51,-53,60,-158,-162,-56,-52,-54,12,-55,-111,-152,-153,-150,12,-132,-130,-163,]),'PRINT':([0,3,4,6,8,13,14,15,16,17,18,19,20,21,22,27,28,29,30,31,32,33,34,38,39,41,42,45,46,47,49,51,55,57,59,61,64,65,66,69,71,74,80,81,82,83,84,85,86,87,88,95,107,108,109,110,119,120,123,131,132,136,137,138,141,148,153,155,157,158,160,163,164,170,171,189,192,207,208,210,211,219,221,222,223,238,242,243,244,245,246,248,253,258,259,260,263,264,265,270,271,272,273,274,277,284,285,288,289,291,295,297,300,309,310,313,320,322,324,325,326,331,337,339,342,345,347,348,349,355,356,],[23,23,23,23,-68,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-141,-142,-143,-144,-106,-107,-108,-95,-41,-42,-67,-70,-127,-128,-129,-69,-71,23,23,23,-10,-64,-14,-15,-39,-97,-98,-93,-94,-99,-100,-101,-102,-103,-104,-105,-87,-57,-62,-60,-61,23,23,23,-32,-33,-37,-38,-65,-161,-75,-78,-79,-83,-96,-30,-34,-40,-109,23,23,-11,-72,-74,-76,-77,-36,-59,-62,-63,-131,-81,-85,-82,-84,-66,-160,23,-80,-86,-31,-159,-35,-58,-110,-112,-113,-114,-133,23,-157,-151,23,23,-73,-149,-145,23,-51,-53,23,-158,-162,-56,-52,-54,23,-55,-111,-152,-153,-150,23,-132,-130,-163,]),'PRINTF':([0,3,4,6,8,13,14,15,16,17,18,19,20,21,22,27,28,29,30,31,32,33,34,38,39,41,42,45,46,47,49,51,55,57,59,61,64,65,66,69,71,74,80,81,82,83,84,85,86,87,88,95,107,108,109,110,119,120,123,131,132,136,137,138,141,148,153,155,157,158,160,163,164,170,171,189,192,207,208,210,211,219,221,222,223,238,242,243,244,245,246,248,253,258,259,260,263,264,265,270,271,272,273,274,277,284,285,288,289,291,295,297,300,309,310,313,320,322,324,325,326,331,337,339,342,345,347,348,349,355,356,],[24,24,24,24,-68,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-141,-142,-143,-144,-106,-107,-108,-95,-41,-42,-67,-70,-127,-128,-129,-69,-71,24,24,24,-10,-64,-14,-15,-39,-97,-98,-93,-94,-99,-100,-101,-102,-103,-104,-105,-87,-57,-62,-60,-61,24,24,24,-32,-33,-37,-38,-65,-161,-75,-78,-79,-83,-96,-30,-34,-40,-109,24,24,-11,-72,-74,-76,-77,-36,-59,-62,-63,-131,-81,-85,-82,-84,-66,-160,24,-80,-86,-31,-159,-35,-58,-110,-112,-113,-114,-133,24,-157,-151,24,24,-73,-149,-145,24,-51,-53,24,-158,-162,-56,-52,-54,24,-55,-111,-152,-153,-150,24,-132,-130,-163,]),'INPUT':([0,3,4,6,8,13,14,15,16,17,18,19,20,21,22,27,28,29,30,31,32,33,34,38,39,41,42,45,46,47,49,51,55,57,59,61,64,65,66,69,71,74,80,81,82,83,84,85,86,87,88,95,107,108,109,110,119,120,123,131,132,136,137,138,141,148,153,155,157,158,160,163,164,170,171,189,192,207,208,210,211,219,221,222,223,238,242,243,244,245,246,248,253,258,259,260,263,264,265,270,271,272,273,274,277,284,285,288,289,291,295,297,300,309,310,313,320,322,324,325,326,331,337,339,342,345,347,348,349,355,356,],[25,25,25,25,-68,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-141,-142,-143,-144,-106,-107,-108,-95,-41,-42,-67,-70,-127,-128,-129,-69,-71,25,25,25,-10,-64,-14,-15,-39,-97,-98,-93,-94,-99,-100,-101,-102,-103,-104,-105,-87,-57,-62,-60,-61,25,25,25,-32,-33,-37,-38,-65,-161,-75,-78,-79,-83,-96,-30,-34,-40,-109,25,25,-11,-72,-74,-76,-77,-36,-59,-62,-63,-131,-81,-85,-82,-84,-66,-160,25,-80,-86,-31,-159,-35,-58,-110,-112,-113,-114,-133,25,-157,-151,25,25,-73,-149,-145,25,-51,-53,25,-158,-162,-56,-52,-54,25,-55,-111,-152,-153,-150,25,-132,-130,-163,]),'LPAREN':([0,3,4,6,7,8,13,14,15,16,17,18,19,20,21,22,23,24,25,27,28,29,30,31,32,33,34,38,39,41,42,45,46,47,49,51,55,57,59,61,64,65,66,67,68,69,71,72,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,93,94,95,96,97,98,99,100,107,108,109,110,119,120,123,129,131,132,135,136,137,138,141,142,148,153,155,156,157,158,160,163,164,170,171,189,192,194,207,208,210,211,219,221,222,223,238,242,243,244,245,246,248,253,257,258,259,260,263,264,265,270,271,272,273,274,277,284,285,288,289,291,295,297,300,309,310,313,320,322,324,325,326,331,337,339,342,345,347,348,349,355,356,],[9,9,9,9,62,-68,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,91,92,93,-141,-142,-143,-144,-106,-107,-108,-95,-41,-42,-67,-70,-127,-128,-129,-69,-71,9,9,9,-10,-64,-14,-15,9,9,-39,-97,-45,-98,-46,-47,-48,-49,-50,-93,-94,-99,-100,-101,-102,-103,-104,-105,145,146,9,9,156,-87,-88,-89,-90,-91,-92,-57,-62,-60,-61,9,9,9,9,-32,-33,200,-37,-38,-65,-161,203,-75,-78,-79,9,-83,-96,-30,-34,-40,-109,9,9,-11,9,-72,-74,-76,-77,-36,-59,-62,-63,-131,-81,-85,-82,-84,-66,-160,9,156,-80,-86,-31,-159,-35,-58,-110,-112,-113,-114,-133,9,-157,-151,9,9,-73,-149,-145,9,-51,-53,9,-158,-162,-56,-52,-54,9,-55,-111,-152,-153,-150,9,-132,-130,-163,]),'VAR':([0,3,4,6,8,13,14,15,16,17,18,19,20,21,22,27,28,29,30,31,32,33,34,38,39,41,42,45,46,47,49,51,55,57,59,61,64,65,66,69,71,74,80,81,82,83,84,85,86,87,88,95,107,108,109,110,119,120,123,131,132,136,137,138,141,148,153,155,157,158,160,163,164,170,171,189,192,207,208,210,211,219,221,222,223,238,242,243,244,245,246,248,253,258,259,260,263,264,265,270,271,272,273,274,277,284,285,288,289,291,295,297,300,309,310,313,320,322,324,325,326,331,337,339,342,345,347,348,349,355,356,],[35,35,35,35,-68,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-141,-142,-143,-144,-106,-107,-108,-95,-41,-42,-67,-70,-127,-128,-129,-69,-71,35,35,35,-10,-64,-14,-15,-39,-97,-98,-93,-94,-99,-100,-101,-102,-103,-104,-105,-87,-57,-62,-60,-61,35,35,35,-32,-33,-37,-38,-65,-161,-75,-78,-79,-83,-96,-30,-34,-40,-109,35,35,-11,-72,-74,-76,-77,-36,-59,-62,-63,-131,-81,-85,-82,-84,-66,-160,35,-80,-86,-31,-159,-35,-58,-110,-112,-113,-114,-133,35,-157,-151,35,35,-73,-149,-145,35,-51,-53,35,-158,-162,-56,-52,-54,35,-55,-111,-152,-153,-150,35,-132,-130,-163,]),'VARIABLE':([0,3,4,6,8,9,10,12,13,14,15,16,17,18,19,20,21,22,27,28,29,30,31,32,33,34,35,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,55,57,59,60,61,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,91,93,94,95,96,97,98,99,100,101,104,105,107,108,109,110,119,120,123,129,130,131,132,136,137,138,141,146,148,153,155,156,157,158,160,163,164,165,166,167,168,170,171,172,173,174,175,176,177,178,179,180,181,182,184,185,186,189,192,194,203,207,208,209,210,211,214,218,219,221,222,223,224,233,238,242,243,244,245,246,248,250,251,253,257,258,259,260,263,264,265,268,269,270,271,272,273,274,277,278,282,284,285,286,288,289,291,295,296,297,300,303,309,310,313,317,319,320,322,324,325,326,328,331,337,339,342,343,344,345,346,347,348,349,355,356,],[11,11,11,11,-68,64,65,90,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-141,-142,-143,-144,-106,-107,-108,-95,102,106,-41,-42,64,-67,-70,111,64,-127,-128,-129,116,-69,118,-71,11,11,11,90,-10,-64,-14,-15,64,64,-39,64,-97,-45,143,-98,-46,-47,-48,-49,-50,-93,-94,-99,-100,-101,-102,-103,-104,-105,64,64,64,-87,-88,-89,-90,-91,-92,159,64,-45,-57,-62,-60,-61,11,11,11,64,64,-32,-33,-37,-38,-65,-161,159,-75,-78,-79,64,-83,-96,-30,-34,-40,64,64,64,64,-109,11,64,-118,-119,-120,64,-121,-122,-123,-124,-125,-126,64,64,237,11,-11,64,252,-72,-74,64,-76,-77,64,64,-36,-59,-62,-63,266,64,-131,-81,-85,-82,-84,-66,-160,64,64,11,64,-80,-86,-31,-159,-35,-58,266,64,-110,-112,-113,-114,-133,11,64,64,-157,-151,64,11,11,-73,-149,-148,-145,11,318,-51,-53,11,64,64,-158,-162,-56,-52,-54,64,11,-55,-111,-152,64,64,-153,64,-150,11,-132,-130,-163,]),'CONST':([0,3,4,6,8,13,14,15,16,17,18,19,20,21,22,27,28,29,30,31,32,33,34,38,39,41,42,45,46,47,49,51,55,57,59,61,64,65,66,69,71,74,80,81,82,83,84,85,86,87,88,95,107,108,109,110,119,120,123,131,132,136,137,138,141,148,153,155,157,158,160,163,164,170,171,189,192,207,208,210,211,219,221,222,223,238,242,243,244,245,246,248,253,258,259,260,263,264,265,270,271,272,273,274,277,284,285,288,289,291,295,297,300,309,310,313,320,322,324,325,326,331,337,339,342,345,347,348,349,355,356,],[37,37,37,37,-68,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-141,-142,-143,-144,-106,-107,-108,-95,-41,-42,-67,-70,-127,-128,-129,-69,-71,37,37,37,-10,-64,-14,-15,-39,-97,-98,-93,-94,-99,-100,-101,-102,-103,-104,-105,-87,-57,-62,-60,-61,37,37,37,-32,-33,-37,-38,-65,-161,-75,-78,-79,-83,-96,-30,-34,-40,-109,37,37,-11,-72,-74,-76,-77,-36,-59,-62,-63,-131,-81,-85,-82,-84,-66,-160,37,-80,-86,-31,-159,-35,-58,-110,-112,-113,-114,-133,37,-157,-151,37,37,-73,-149,-145,37,-51,-53,37,-158,-162,-56,-52,-54,37,-55,-111,-152,-153,-150,37,-132,-130,-163,]),'RETURN':([0,3,4,6,8,13,14,15,16,17,18,19,20,21,22,27,28,29,30,31,32,33,34,38,39,41,42,45,46,47,49,51,55,57,59,61,64,65,66,69,71,74,80,81,82,83,84,85,86,87,88,95,107,108,109,110,119,120,123,131,132,136,137,138,141,148,153,155,157,158,160,163,164,170,171,189,192,207,208,210,211,219,221,222,223,238,242,243,244,245,246,248,253,258,259,260,263,264,265,270,271,272,273,274,277,284,285,288,289,291,295,297,300,309,310,313,320,322,324,325,326,331,337,339,342,345,347,348,349,355,356,],[40,40,40,40,-68,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-141,-142,-143,-144,-106,-107,-108,-95,-41,-42,-67,-70,-127,-128,-129,-69,-71,40,40,40,-10,-64,-14,-15,-39,-97,-98,-93,-94,-99,-100,-101,-102,-103,-104,-105,-87,-57,-62,-60,-61,40,40,40,-32,-33,-37,-38,-65,-161,-75,-78,-79,-83,-96,-30,-34,-40,-109,40,40,-11,-72,-74,-76,-77,-36,-59,-62,-63,-131,-81,-85,-82,-84,-66,-160,40,-80,-86,-31,-159,-35,-58,-110,-112,-113,-114,-133,40,-157,-151,40,40,-73,-149,-145,40,-51,-53,40,-158,-162,-56,-52,-54,40,-55,-111,-152,-153,-150,40,-132,-130,-163,]),'TYPE':([0,3,4,6,8,13,14,15,16,17,18,19,20,21,22,27,28,29,30,31,32,33,34,38,39,41,42,45,46,47,49,51,55,57,59,61,64,65,66,69,71,74,80,81,82,83,84,85,86,87,88,95,107,108,109,110,119,120,123,131,132,136,137,138,141,148,153,155,157,158,160,163,164,170,171,189,192,207,208,210,211,219,221,222,223,238,242,243,244,245,246,248,253,258,259,260,263,264,265,270,271,272,273,274,277,284,285,288,289,291,295,297,300,309,310,313,320,322,324,325,326,331,337,339,342,345,347,348,349,355,356,],[43,43,43,43,-68,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-141,-142,-143,-144,-106,-107,-108,-95,-41,-42,-67,-70,-127,-128,-129,-69,-71,43,43,43,-10,-64,-14,-15,-39,-97,-98,-93,-94,-99,-100,-101,-102,-103,-104,-105,-87,-57,-62,-60,-61,43,43,43,-32,-33,-37,-38,-65,-161,-75,-78,-79,-83,-96,-30,-34,-40,-109,43,43,-11,-72,-74,-76,-77,-36,-59,-62,-63,-131,-81,-85,-82,-84,-66,-160,43,-80,-86,-31,-159,-35,-58,-110,-112,-113,-114,-133,43,-157,-151,43,43,-73,-149,-145,43,-51,-53,43,-158,-162,-56,-52,-54,43,-55,-111,-152,-153,-150,43,-132,-130,-163,]),'IF':([0,3,4,6,8,13,14,15,16,17,18,19,20,21,22,27,28,29,30,31,32,33,34,38,39,41,42,45,46,47,49,51,55,57,59,61,64,65,66,69,71,74,80,81,82,83,84,85,86,87,88,95,107,108,109,110,119,120,123,131,132,136,137,138,141,148,153,155,157,158,160,163,164,170,171,189,192,207,208,210,211,219,221,222,223,225,238,242,243,244,245,246,248,253,258,259,260,263,264,265,270,271,272,273,274,277,284,285,288,289,291,295,297,300,309,310,313,320,322,324,325,326,331,337,339,342,345,347,348,349,355,356,],[44,44,44,44,-68,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-141,-142,-143,-144,-106,-107,-108,-95,-41,-42,-67,-70,-127,-128,-129,-69,-71,44,44,44,-10,-64,-14,-15,-39,-97,-98,-93,-94,-99,-100,-101,-102,-103,-104,-105,-87,-57,-62,-60,-61,44,44,44,-32,-33,-37,-38,-65,-161,-75,-78,-79,-83,-96,-30,-34,-40,-109,44,44,-11,-72,-74,-76,-77,-36,-59,-62,-63,269,-131,-81,-85,-82,-84,-66,-160,44,-80,-86,-31,-159,-35,-58,-110,-112,-113,-114,-133,44,-157,-151,44,44,-73,-149,-145,44,-51,-53,44,-158,-162,-56,-52,-54,44,-55,-111,-152,-153,-150,44,-132,-130,-163,]),'SWITCH':([0,3,4,6,8,13,14,15,16,17,18,19,20,21,22,27,28,29,30,31,32,33,34,38,39,41,42,45,46,47,49,51,55,57,59,61,64,65,66,69,71,74,80,81,82,83,84,85,86,87,88,95,107,108,109,110,119,120,123,131,132,136,137,138,141,148,153,155,157,158,160,163,164,170,171,189,192,207,208,210,211,219,221,222,223,238,242,243,244,245,246,248,253,258,259,260,263,264,265,270,271,272,273,274,277,284,285,288,289,291,295,297,300,309,310,313,320,322,324,325,326,331,337,339,342,345,347,348,349,355,356,],[48,48,48,48,-68,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-141,-142,-143,-144,-106,-107,-108,-95,-41,-42,-67,-70,-127,-128,-129,-69,-71,48,48,48,-10,-64,-14,-15,-39,-97,-98,-93,-94,-99,-100,-101,-102,-103,-104,-105,-87,-57,-62,-60,-61,48,48,48,-32,-33,-37,-38,-65,-161,-75,-78,-79,-83,-96,-30,-34,-40,-109,48,48,-11,-72,-74,-76,-77,-36,-59,-62,-63,-131,-81,-85,-82,-84,-66,-160,48,-80,-86,-31,-159,-35,-58,-110,-112,-113,-114,-133,48,-157,-151,48,48,-73,-149,-145,48,-51,-53,48,-158,-162,-56,-52,-54,48,-55,-111,-152,-153,-150,48,-132,-130,-163,]),'CHARSTRING':([0,3,4,6,7,8,9,13,14,15,16,17,18,19,20,21,22,27,28,29,30,31,32,33,34,38,39,40,41,42,44,45,46,47,49,51,55,57,59,61,62,64,65,66,67,68,69,70,71,72,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,91,93,94,95,96,97,98,99,100,104,105,107,108,109,110,119,120,123,127,129,130,131,132,136,137,138,141,148,153,155,156,157,158,160,163,164,165,166,167,168,170,171,172,173,174,175,176,177,178,179,180,181,182,184,185,189,192,194,207,208,209,210,211,214,218,219,221,222,223,233,238,242,243,244,245,246,248,250,251,253,257,258,259,260,263,264,265,269,270,271,272,273,274,277,278,282,284,285,286,288,289,291,295,297,300,309,310,313,317,319,320,322,324,325,326,328,331,337,339,342,343,344,345,346,347,348,349,355,356,],[8,8,8,8,61,-68,8,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-141,-142,-143,-144,-106,-107,-108,-95,-41,-42,8,-67,-70,8,-127,-128,-129,-69,-71,8,8,8,-10,127,-64,-14,-15,8,8,-39,8,-97,-45,-98,-46,-47,-48,-49,-50,-93,-94,-99,-100,-101,-102,-103,-104,-105,8,8,8,-87,-88,-89,-90,-91,-92,8,-45,-57,-62,-60,-61,8,8,8,127,8,8,-32,-33,-37,-38,-65,-161,-75,-78,-79,8,-83,-96,-30,-34,-40,8,8,8,8,-109,8,8,-118,-119,-120,8,-121,-122,-123,-124,-125,-126,8,8,8,-11,8,-72,-74,8,-76,-77,8,8,-36,-59,-62,-63,8,-131,-81,-85,-82,-84,-66,-160,8,8,8,8,-80,-86,-31,-159,-35,-58,8,-110,-112,-113,-114,-133,8,8,8,-157,-151,8,8,8,-73,-149,-145,8,-51,-53,8,8,8,-158,-162,-56,-52,-54,8,8,-55,-111,-152,8,8,-153,8,-150,8,-132,-130,-163,]),'FOR':([0,3,4,6,8,13,14,15,16,17,18,19,20,21,22,27,28,29,30,31,32,33,34,38,39,41,42,45,46,47,49,51,55,57,59,61,64,65,66,69,71,74,80,81,82,83,84,85,86,87,88,95,107,108,109,110,119,120,123,131,132,136,137,138,141,148,153,155,157,158,160,163,164,170,171,189,192,207,208,210,211,219,221,222,223,238,242,243,244,245,246,248,253,258,259,260,263,264,265,270,271,272,273,274,277,284,285,288,289,291,295,297,300,309,310,313,320,322,324,325,326,331,337,339,342,345,347,348,349,355,356,],[50,50,50,50,-68,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-141,-142,-143,-144,-106,-107,-108,-95,-41,-42,-67,-70,-127,-128,-129,-69,-71,50,50,50,-10,-64,-14,-15,-39,-97,-98,-93,-94,-99,-100,-101,-102,-103,-104,-105,-87,-57,-62,-60,-61,50,50,50,-32,-33,-37,-38,-65,-161,-75,-78,-79,-83,-96,-30,-34,-40,-109,50,50,-11,-72,-74,-76,-77,-36,-59,-62,-63,-131,-81,-85,-82,-84,-66,-160,50,-80,-86,-31,-159,-35,-58,-110,-112,-113,-114,-133,50,-157,-151,50,50,-73,-149,-145,50,-51,-53,50,-158,-162,-56,-52,-54,50,-55,-111,-152,-153,-150,50,-132,-130,-163,]),'INT':([0,3,4,6,8,9,11,13,14,15,16,17,18,19,20,21,22,27,28,29,30,31,32,33,34,38,39,40,41,42,44,45,46,47,49,51,55,57,59,61,64,65,66,67,68,69,70,71,72,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,91,93,94,95,96,97,98,99,100,102,103,104,105,107,108,109,110,119,120,123,129,130,131,132,136,137,138,141,143,144,148,153,155,156,157,158,159,160,162,163,164,165,166,167,168,170,171,172,173,174,175,176,177,178,179,180,181,182,184,185,189,192,194,198,199,205,207,208,209,210,211,214,215,217,218,219,221,222,223,233,238,242,243,244,245,246,248,250,251,253,255,257,258,259,260,262,263,264,265,266,269,270,271,272,273,274,277,278,281,282,283,284,285,286,288,289,291,294,295,297,300,309,310,313,317,319,320,321,322,323,324,325,326,328,331,337,339,342,343,344,345,346,347,348,349,355,356,],[42,42,42,42,-68,42,74,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-141,-142,-143,-144,-106,-107,-108,-95,-41,-42,42,-67,-70,42,-127,-128,-129,-69,-71,42,42,42,-10,-64,-14,-15,42,42,-39,140,-97,-45,-98,-46,-47,-48,-49,-50,-93,-94,-99,-100,-101,-102,-103,-104,-105,42,42,42,-87,-88,-89,-90,-91,-92,74,74,42,-45,-57,-62,-60,-61,42,42,42,42,42,-32,-33,-37,-38,-65,-161,-43,-44,-75,-78,-79,42,-83,-96,74,-30,216,-34,-40,42,42,42,42,-109,42,42,-118,-119,-120,42,-121,-122,-123,-124,-125,-126,42,42,42,-11,42,74,74,74,-72,-74,42,-76,-77,42,261,74,42,-36,-59,-62,-63,42,-131,-81,-85,-82,-84,-66,-160,42,42,42,74,42,-80,-86,-31,74,-159,-35,-58,74,42,-110,-112,-113,-114,-133,42,42,74,42,74,-157,-151,42,42,42,-73,74,-149,-145,42,-51,-53,42,42,42,-158,74,-162,74,-56,-52,-54,42,42,-55,-111,-152,42,42,-153,42,-150,42,-132,-130,-163,]),'FLOAT':([0,3,4,6,8,9,11,13,14,15,16,17,18,19,20,21,22,27,28,29,30,31,32,33,34,38,39,40,41,42,44,45,46,47,49,51,55,57,59,61,64,65,66,67,68,69,70,71,72,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,91,93,94,95,96,97,98,99,100,102,103,104,105,107,108,109,110,119,120,123,129,130,131,132,136,137,138,141,143,144,148,153,155,156,157,158,159,160,163,164,165,166,167,168,170,171,172,173,174,175,176,177,178,179,180,181,182,184,185,189,192,194,198,199,205,207,208,209,210,211,214,217,218,219,221,222,223,233,238,242,243,244,245,246,248,250,251,253,255,257,258,259,260,262,263,264,265,266,269,270,271,272,273,274,277,278,281,282,283,284,285,286,288,289,291,294,295,297,300,309,310,313,317,319,320,321,322,323,324,325,326,328,331,337,339,342,343,344,345,346,347,348,349,355,356,],[51,51,51,51,-68,51,85,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-141,-142,-143,-144,-106,-107,-108,-95,-41,-42,51,-67,-70,51,-127,-128,-129,-69,-71,51,51,51,-10,-64,-14,-15,51,51,-39,51,-97,-45,-98,-46,-47,-48,-49,-50,-93,-94,-99,-100,-101,-102,-103,-104,-105,51,51,51,-87,-88,-89,-90,-91,-92,85,85,51,-45,-57,-62,-60,-61,51,51,51,51,51,-32,-33,-37,-38,-65,-161,-43,-44,-75,-78,-79,51,-83,-96,85,-30,-34,-40,51,51,51,51,-109,51,51,-118,-119,-120,51,-121,-122,-123,-124,-125,-126,51,51,51,-11,51,85,85,85,-72,-74,51,-76,-77,51,85,51,-36,-59,-62,-63,51,-131,-81,-85,-82,-84,-66,-160,51,51,51,85,51,-80,-86,-31,85,-159,-35,-58,85,51,-110,-112,-113,-114,-133,51,51,85,51,85,-157,-151,51,51,51,-73,85,-149,-145,51,-51,-53,51,51,51,-158,85,-162,85,-56,-52,-54,51,51,-55,-111,-152,51,51,-153,51,-150,51,-132,-130,-163,]),'IMPORT':([0,4,65,66,119,171,277,300,331,348,],[7,7,-14,-15,7,7,7,7,7,7,]),'PACKAGE':([0,119,171,277,300,331,348,],[10,10,10,10,10,10,10,]),'$end':([1,2,6,8,13,14,15,16,17,18,19,20,21,22,27,28,29,30,31,32,33,34,38,39,41,42,45,46,47,49,51,52,54,58,64,69,71,74,80,81,82,83,84,85,86,87,88,95,107,108,109,110,121,125,131,132,136,137,138,141,148,153,155,157,158,160,163,164,170,191,207,208,210,211,219,221,222,223,238,239,241,242,243,244,245,246,248,258,259,260,263,264,265,270,271,272,273,274,280,284,285,291,295,297,309,310,320,322,324,325,326,337,339,342,345,347,349,355,356,],[0,-1,-17,-68,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-141,-142,-143,-144,-106,-107,-108,-95,-41,-42,-67,-70,-127,-128,-129,-69,-71,-2,-3,-18,-64,-39,-97,-98,-93,-94,-99,-100,-101,-102,-103,-104,-105,-87,-57,-62,-60,-61,-4,-19,-32,-33,-37,-38,-65,-161,-75,-78,-79,-83,-96,-30,-34,-40,-109,-5,-72,-74,-76,-77,-36,-59,-62,-63,-131,-7,-6,-81,-85,-82,-84,-66,-160,-80,-86,-31,-159,-35,-58,-110,-112,-113,-114,-133,-8,-157,-151,-73,-149,-145,-51,-53,-158,-162,-56,-52,-54,-55,-111,-152,-153,-150,-132,-130,-163,]),'RBRACE':([2,6,8,13,14,15,16,17,18,19,20,21,22,27,28,29,30,31,32,33,34,38,39,41,42,45,46,47,49,51,52,54,58,64,69,71,74,80,81,82,83,84,85,86,87,88,95,107,108,109,110,121,124,125,131,132,136,137,138,141,148,153,155,157,158,160,163,164,170,187,188,190,191,207,208,210,211,219,221,222,223,226,227,228,231,232,238,239,240,241,242,243,244,245,246,248,258,259,260,263,264,265,267,268,270,271,272,273,274,275,280,284,285,287,288,291,295,296,297,298,301,305,309,310,311,312,313,316,320,322,324,325,326,327,332,333,337,338,339,341,342,345,347,349,350,351,352,353,355,356,],[-1,-17,-68,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-141,-142,-143,-144,-106,-107,-108,-95,-41,-42,-67,-70,-127,-128,-129,-69,-71,-2,-3,-18,-64,-39,-97,-98,-93,-94,-99,-100,-101,-102,-103,-104,-105,-87,-57,-62,-60,-61,-4,191,-19,-32,-33,-37,-38,-65,-161,-75,-78,-79,-83,-96,-30,-34,-40,-109,238,239,241,-5,-72,-74,-76,-77,-36,-59,-62,-63,271,272,273,274,-136,-131,-7,280,-6,-81,-85,-82,-84,-66,-160,-80,-86,-31,-159,-35,-58,297,-146,-110,-112,-113,-114,-133,-137,-8,-157,-151,309,310,-73,-149,-148,-145,-147,-139,320,-51,-53,324,325,326,-138,-158,-162,-56,-52,-54,337,342,-154,-55,347,-111,349,-152,-153,-150,-132,-155,-156,354,355,-130,-163,]),'CASE':([2,6,8,13,14,15,16,17,18,19,20,21,22,27,28,29,30,31,32,33,34,38,39,41,42,45,46,47,49,51,52,54,58,64,69,71,74,80,81,82,83,84,85,86,87,88,95,107,108,109,110,121,125,131,132,136,137,138,141,148,153,155,157,158,160,163,164,170,183,191,207,208,210,211,219,221,222,223,232,238,239,241,242,243,244,245,246,248,258,259,260,263,264,265,270,271,272,273,274,280,284,285,291,295,297,301,309,310,316,320,322,324,325,326,337,339,342,345,347,349,355,356,],[-1,-17,-68,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-141,-142,-143,-144,-106,-107,-108,-95,-41,-42,-67,-70,-127,-128,-129,-69,-71,-2,-3,-18,-64,-39,-97,-98,-93,-94,-99,-100,-101,-102,-103,-104,-105,-87,-57,-62,-60,-61,-4,-19,-32,-33,-37,-38,-65,-161,-75,-78,-79,-83,-96,-30,-34,-40,-109,233,-5,-72,-74,-76,-77,-36,-59,-62,-63,233,-131,-7,-6,-81,-85,-82,-84,-66,-160,-80,-86,-31,-159,-35,-58,-110,-112,-113,-114,-133,-8,-157,-151,-73,-149,-145,-139,-51,-53,-138,-158,-162,-56,-52,-54,-55,-111,-152,-153,-150,-132,-130,-163,]),'DEFAULT':([2,6,8,13,14,15,16,17,18,19,20,21,22,27,28,29,30,31,32,33,34,38,39,41,42,45,46,47,49,51,52,54,58,64,69,71,74,80,81,82,83,84,85,86,87,88,95,107,108,109,110,121,125,131,132,136,137,138,141,148,153,155,157,158,160,163,164,170,183,191,207,208,210,211,219,221,222,223,232,238,239,241,242,243,244,245,246,248,258,259,260,263,264,265,270,271,272,273,274,280,284,285,291,295,297,301,309,310,316,320,322,324,325,326,337,339,342,345,347,349,355,356,],[-1,-17,-68,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-141,-142,-143,-144,-106,-107,-108,-95,-41,-42,-67,-70,-127,-128,-129,-69,-71,-2,-3,-18,-64,-39,-97,-98,-93,-94,-99,-100,-101,-102,-103,-104,-105,-87,-57,-62,-60,-61,-4,-19,-32,-33,-37,-38,-65,-161,-75,-78,-79,-83,-96,-30,-34,-40,-109,234,-5,-72,-74,-76,-77,-36,-59,-62,-63,234,-131,-7,-6,-81,-85,-82,-84,-66,-160,-80,-86,-31,-159,-35,-58,-110,-112,-113,-114,-133,-8,-157,-151,-73,-149,-145,-139,-51,-53,-138,-158,-162,-56,-52,-54,-55,-111,-152,-153,-150,-132,-130,-163,]),'LBRACE':([5,8,41,42,48,49,50,51,53,56,64,74,80,81,82,83,84,85,86,87,88,112,113,115,117,122,138,169,204,205,225,229,230,235,246,248,254,255,290,299,304,314,318,329,336,340,],[57,-68,-67,-70,-140,-69,119,-71,120,123,-64,-98,-93,-94,-99,-100,-101,-102,-103,-104,-105,171,-115,183,-135,189,-65,224,-16,253,171,-116,-117,-134,-66,282,288,289,313,171,319,328,331,171,346,348,]),'SEMICOLON':([6,8,13,14,15,16,17,18,19,20,21,22,27,28,29,30,31,32,33,34,38,39,41,42,45,46,47,49,51,64,69,71,74,80,81,82,83,84,85,86,87,88,95,107,108,109,110,131,132,136,137,138,141,148,153,155,157,158,160,163,164,170,207,208,210,211,219,221,222,223,230,236,238,242,243,244,245,246,248,258,259,260,263,264,265,270,271,272,273,274,284,285,291,295,297,302,309,310,320,322,324,325,326,337,339,342,345,347,349,355,356,],[59,-68,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-141,-142,-143,-144,-106,-107,-108,-95,-41,-42,-67,-70,-127,-128,-129,-69,-71,-64,-39,-97,-98,-93,-94,-99,-100,-101,-102,-103,-104,-105,-87,-57,-62,-60,-61,-32,-33,-37,-38,-65,-161,-75,-78,-79,-83,-96,-30,-34,-40,-109,-72,-74,-76,-77,-36,-59,-62,-63,-117,278,-131,-81,-85,-82,-84,-66,-160,-80,-86,-31,-159,-35,-58,-110,-112,-113,-114,-133,-157,-151,-73,-149,-145,317,-51,-53,-158,-162,-56,-52,-54,-55,-111,-152,-153,-150,-132,-130,-163,]),'PLUS':([8,11,26,41,42,49,51,63,64,128,131,136,138,150,155,195,201,212,242,246,258,292,],[-68,-64,96,-67,-70,-69,-71,96,-64,96,96,96,-65,96,96,96,-66,96,96,-66,96,96,]),'MINUS':([8,11,26,41,42,49,51,63,64,128,131,136,138,150,155,195,201,212,242,246,258,292,],[-68,-64,97,-67,-70,-69,-71,97,-64,97,97,97,-65,97,97,97,-66,97,97,-66,97,97,]),'TIMES':([8,11,26,41,42,49,51,63,64,128,131,136,138,150,155,195,201,212,242,246,258,292,],[-68,-64,98,-67,-70,-69,-71,98,-64,98,98,98,-65,98,98,98,-66,98,98,-66,98,98,]),'DIVIDE':([8,11,26,41,42,49,51,63,64,128,131,136,138,150,155,195,201,212,242,246,258,292,],[-68,-64,99,-67,-70,-69,-71,99,-64,99,99,99,-65,99,99,99,-66,99,99,-66,99,99,]),'ASSIGN':([8,11,26,36,41,42,49,51,63,64,74,82,83,84,85,86,87,88,102,106,128,131,136,138,143,144,150,155,160,163,195,201,202,212,242,246,258,292,],[-68,72,100,105,-67,-70,-69,-71,100,-64,-98,-99,-100,-101,-102,-103,-104,-105,161,165,100,100,100,-65,-43,-44,100,100,214,218,100,250,251,100,100,-66,100,100,]),'INCREMENT':([8,11,26,41,42,49,51,64,131,136,138,150,155,195,201,212,242,246,292,330,],[-68,80,80,-67,-70,-69,-71,-64,80,80,-65,80,80,80,-66,80,80,-66,80,80,]),'DECREMENT':([8,11,26,41,42,49,51,64,131,136,138,150,155,195,201,212,242,246,292,330,],[-68,81,81,-67,-70,-69,-71,-64,81,81,-65,81,81,81,-66,81,81,-66,81,81,]),'RPAREN':([8,34,41,42,49,51,63,64,71,74,80,81,82,83,84,85,86,87,88,91,93,95,126,127,138,145,146,147,149,150,152,154,155,157,158,193,195,196,206,212,213,222,223,242,243,244,245,246,256,258,259,292,293,307,335,354,],[-68,-95,-67,-70,-69,-71,128,-64,-97,-98,-93,-94,-99,-100,-101,-102,-103,-104,-105,148,153,-87,192,-12,-65,204,205,207,208,-62,210,211,-79,-83,-96,-13,244,245,255,258,259,-62,-63,-81,-85,-82,-84,-66,291,-80,-86,244,245,322,345,356,]),'LBRACKET':([8,11,41,42,49,51,64,67,102,108,133,138,161,246,249,286,],[-68,70,-67,-70,-69,-71,130,134,162,166,198,-65,215,-66,283,308,]),'PERIOD':([8,41,42,49,51,64,108,138,246,],[-68,-67,-70,-69,-71,-64,167,-65,-66,]),'COMMA':([8,11,34,41,42,49,51,64,71,74,82,83,84,85,86,87,88,102,108,118,138,143,150,151,222,246,252,333,351,],[-68,73,101,-67,-70,-69,-71,-64,-97,-98,-99,-100,-101,-102,-103,-104,-105,73,168,186,-65,73,168,209,168,-66,286,343,-156,]),'GREATER':([8,41,42,49,51,64,114,138,246,],[-68,-67,-70,-69,-71,-64,177,-65,-66,]),'LESS':([8,41,42,49,51,64,114,138,246,],[-68,-67,-70,-69,-71,-64,178,-65,-66,]),'GREATEREQUALS':([8,41,42,49,51,64,114,138,246,],[-68,-67,-70,-69,-71,-64,179,-65,-66,]),'LESSEQUALS':([8,41,42,49,51,64,114,138,246,],[-68,-67,-70,-69,-71,-64,180,-65,-66,]),'EQUALS':([8,41,42,49,51,64,114,138,246,],[-68,-67,-70,-69,-71,-64,181,-65,-66,]),'DIFFERENT':([8,41,42,49,51,64,114,138,246,],[-68,-67,-70,-69,-71,-64,182,-65,-66,]),'RBRACKET':([8,41,42,49,51,64,70,74,82,83,84,85,86,87,88,130,134,138,139,140,162,197,216,220,246,247,261,306,308,],[-68,-67,-70,-69,-71,-64,138,-98,-99,-100,-101,-102,-103,-104,-105,138,199,-65,201,202,217,246,262,265,-66,281,294,321,323,]),'COLON':([8,41,42,49,51,64,138,222,223,234,246,276,334,],[-68,-67,-70,-69,-71,-64,-65,-62,-63,277,-66,300,344,]),'AND':([8,41,42,49,51,64,113,138,230,246,],[-68,-67,-70,-69,-71,-64,173,-65,-117,-66,]),'OR':([8,41,42,49,51,64,113,138,230,246,],[-68,-67,-70,-69,-71,-64,174,-65,-117,-66,]),'NOT':([8,41,42,49,51,64,113,138,230,246,],[-68,-67,-70,-69,-71,-64,175,-65,-117,-66,]),'MAIN':([10,12,],[66,89,]),'SHORTASSIGN':([11,116,118,237,],[67,184,185,279,]),'PLUSASSIGN':([11,36,143,144,],[75,75,-43,-44,]),'MINUSASSIGN':([11,36,143,144,],[76,76,-43,-44,]),'TIMESASSIGN':([11,36,143,144,],[77,77,-43,-44,]),'DIVIDEASSIGN':([11,36,143,144,],[78,78,-43,-44,]),'MODASSIGN':([11,36,143,144,],[79,79,-43,-44,]),'INT32':([11,102,103,143,144,159,198,199,205,217,255,262,266,281,283,294,321,323,],[82,82,82,-43,-44,82,82,82,82,82,82,82,82,82,82,82,82,82,]),'INT64':([11,102,103,143,144,159,198,199,205,217,255,262,266,281,283,294,321,323,],[83,83,83,-43,-44,83,83,83,83,83,83,83,83,83,83,83,83,83,]),'STRING':([11,102,103,143,144,159,198,199,205,217,255,262,266,281,283,294,321,323,],[84,84,84,-43,-44,84,84,84,84,84,84,84,84,84,84,84,84,84,]),'FLOAT32':([11,102,103,143,144,159,198,199,205,217,255,262,266,281,283,294,321,323,],[86,86,86,-43,-44,86,86,86,86,86,86,86,86,86,86,86,86,86,]),'FLOAT64':([11,102,103,143,144,159,198,199,205,217,255,262,266,281,283,294,321,323,],[87,87,87,-43,-44,87,87,87,87,87,87,87,87,87,87,87,87,87,]),'BOOL':([11,102,103,143,144,159,198,199,205,217,255,262,266,281,283,294,321,323,],[88,88,88,-43,-44,88,88,88,88,88,88,88,88,88,88,88,88,88,]),'TRUE':([40,],[109,]),'FALSE':([40,],[110,]),'MAP':([67,200,],[133,249,]),'MAKE':([67,],[135,]),'APPEND':([72,],[142,]),'FORMATSTRING':([92,],[151,]),'STRUCT':([111,],[169,]),'ELSE':([170,271,272,273,315,],[225,-112,-113,-114,329,]),'BREAK':([171,],[227,]),'CONTINUE':([171,],[228,]),'RANGE':([279,],[303,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statement':([0,119,171,277,300,331,348,],[1,187,226,301,316,341,353,]),'blocks':([0,3,4,6,55,57,59,119,120,123,171,189,253,277,288,289,300,313,331,348,],[2,52,54,58,121,124,125,2,188,190,2,240,287,2,311,312,2,327,2,2,]),'import':([0,4,119,171,277,300,331,348,],[3,55,3,3,3,3,3,3,]),'package':([0,119,171,277,300,331,348,],[4,4,4,4,4,4,4,]),'main':([0,3,4,55,119,171,277,300,331,348,],[5,53,56,122,5,5,5,5,5,5,]),'block':([0,3,4,6,55,57,59,119,120,123,171,189,253,277,288,289,300,313,331,348,],[6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'print_statement':([0,3,4,6,55,57,59,119,120,123,171,189,253,277,288,289,300,313,331,348,],[13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'input_statement':([0,3,4,6,55,57,59,119,120,123,171,189,253,277,288,289,300,313,331,348,],[14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'operation':([0,3,4,6,55,57,59,67,68,91,93,94,119,120,123,129,156,171,189,194,253,257,277,288,289,300,313,331,348,],[15,15,15,15,15,15,15,132,137,149,154,157,15,15,15,196,213,15,15,243,15,293,15,15,15,15,15,15,15,]),'data_structure':([0,3,4,6,55,57,59,119,120,123,171,189,253,277,288,289,300,313,331,348,],[16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,]),'control_structure':([0,3,4,6,55,57,59,119,120,123,171,189,253,277,288,289,300,313,331,348,],[17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,]),'function':([0,3,4,6,55,57,59,119,120,123,171,189,253,277,288,289,300,313,331,348,],[18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,]),'parameters':([0,3,4,6,55,57,59,101,119,120,123,146,171,189,253,277,288,289,300,313,331,348,],[19,19,19,19,19,19,19,158,19,19,19,206,19,19,19,19,19,19,19,19,19,19,]),'variable_declaration':([0,3,4,6,55,57,59,119,120,123,171,189,253,277,288,289,300,313,331,348,],[20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,]),'variable_assignation':([0,3,4,6,55,57,59,119,120,123,171,189,253,277,288,289,300,313,331,348,],[21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,]),'return':([0,3,4,6,55,57,59,119,120,123,171,189,253,277,288,289,300,313,331,348,],[22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'value':([0,3,4,6,9,40,44,55,57,59,67,68,70,91,93,94,104,119,120,123,129,130,156,165,166,167,168,171,172,176,184,185,189,194,209,214,218,233,250,251,253,257,269,277,278,282,286,288,289,300,313,317,319,328,331,343,344,346,348,],[26,26,26,26,63,108,114,26,26,26,131,136,139,150,150,155,164,26,26,26,195,197,212,219,220,221,222,26,114,230,235,236,26,242,222,260,264,222,284,285,26,292,114,26,114,222,222,26,26,26,26,330,334,222,26,334,351,222,26,]),'array_structure':([0,3,4,6,55,57,59,119,120,123,171,189,253,277,288,289,300,313,331,348,],[27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'map_structure':([0,3,4,6,55,57,59,119,120,123,171,189,253,277,288,289,300,313,331,348,],[28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'slice_structure':([0,3,4,6,55,57,59,119,120,123,171,189,253,277,288,289,300,313,331,348,],[29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'struct_structure':([0,3,4,6,55,57,59,119,120,123,171,189,253,277,288,289,300,313,331,348,],[30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,]),'conditional_structure':([0,3,4,6,55,57,59,119,120,123,171,189,253,277,288,289,300,313,331,348,],[31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,]),'for_estructure':([0,3,4,6,55,57,59,119,120,123,171,189,253,277,288,289,300,313,331,348,],[32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'switch_structure':([0,3,4,6,55,57,59,119,120,123,171,189,253,277,288,289,300,313,331,348,],[33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,]),'parameter':([0,3,4,6,55,57,59,101,119,120,123,146,171,189,253,277,288,289,300,313,331,348,],[34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'variables':([0,3,4,6,35,55,57,59,73,119,120,123,171,189,253,277,288,289,300,313,331,348,],[36,36,36,36,103,36,36,36,144,36,36,36,36,36,36,36,36,36,36,36,36,36,]),'map_assign':([0,3,4,6,55,57,59,119,120,123,171,189,253,277,288,289,300,313,331,348,],[38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,]),'array_assign':([0,3,4,6,55,57,59,119,120,123,171,189,253,277,288,289,300,313,331,348,],[39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,]),'not_variable_value':([0,3,4,6,9,40,44,55,57,59,67,68,70,91,93,94,104,119,120,123,129,130,156,165,166,167,168,171,172,176,184,185,189,194,209,214,218,233,250,251,253,257,269,277,278,282,286,288,289,300,313,317,319,328,331,343,344,346,348,],[41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,]),'for_initialization':([0,3,4,6,55,57,59,119,120,123,171,189,253,277,288,289,300,313,331,348,],[45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,]),'for_infinite_bucle':([0,3,4,6,55,57,59,119,120,123,171,189,253,277,288,289,300,313,331,348,],[46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,]),'for_iterator':([0,3,4,6,55,57,59,119,120,123,171,189,253,277,288,289,300,313,331,348,],[47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,]),'number':([0,3,4,6,9,40,44,55,57,59,67,68,70,91,93,94,104,119,120,123,129,130,156,165,166,167,168,171,172,176,184,185,189,194,209,214,218,233,250,251,253,257,269,277,278,282,286,288,289,300,313,317,319,328,331,343,344,346,348,],[49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,]),'assignation':([11,36,],[68,104,]),'double_operator':([11,26,131,136,150,155,195,212,242,292,330,],[69,95,95,95,95,95,95,95,95,95,340,]),'type':([11,102,103,159,198,199,205,217,255,262,266,281,283,294,321,323,],[71,160,163,71,247,248,254,263,290,295,296,304,306,314,335,336,]),'operator':([26,63,128,131,136,150,155,195,212,242,258,292,],[94,129,194,94,94,94,94,94,257,94,194,94,]),'values':([40,91,93,168,209,233,282,286,328,346,],[107,147,152,223,256,276,305,307,338,352,]),'conditions':([44,172,269,],[112,229,299,]),'condition':([44,172,269,278,],[113,113,113,302,]),'switch_expression':([48,],[115,]),'empty':([48,],[117,]),'values_for_import':([62,127,],[126,193,]),'append_statement':([72,],[141,]),'conditional_body':([112,225,299,329,],[170,270,315,339,]),'logical_operator':([113,],[172,]),'relational_operator':([114,],[176,]),'case_blocks':([183,232,],[231,275,]),'case_block':([183,232,],[232,232,]),'struct_fields':([224,268,],[267,298,]),'struct_field':([224,268,],[268,268,]),'map_values':([319,343,],[332,350,]),'map_value':([319,343,],[333,333,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statement","S'",1,None,None,None),
  ('statement -> blocks','statement',1,'p_statement','analizadorSintactico.py',13),
  ('statement -> import blocks','statement',2,'p_statement','analizadorSintactico.py',14),
  ('statement -> package blocks','statement',2,'p_statement','analizadorSintactico.py',15),
  ('statement -> package import blocks','statement',3,'p_statement','analizadorSintactico.py',16),
  ('statement -> main LBRACE blocks RBRACE','statement',4,'p_statement','analizadorSintactico.py',17),
  ('statement -> package main LBRACE blocks RBRACE','statement',5,'p_statement','analizadorSintactico.py',18),
  ('statement -> import main LBRACE blocks RBRACE','statement',5,'p_statement','analizadorSintactico.py',19),
  ('statement -> package import main LBRACE blocks RBRACE','statement',6,'p_statement','analizadorSintactico.py',20),
  ('import -> <empty>','import',0,'p_import','analizadorSintactico.py',23),
  ('import -> IMPORT CHARSTRING','import',2,'p_import','analizadorSintactico.py',24),
  ('import -> IMPORT LPAREN values_for_import RPAREN','import',4,'p_import','analizadorSintactico.py',25),
  ('values_for_import -> CHARSTRING','values_for_import',1,'p_values_for_import','analizadorSintactico.py',28),
  ('values_for_import -> CHARSTRING values_for_import','values_for_import',2,'p_values_for_import','analizadorSintactico.py',29),
  ('package -> PACKAGE VARIABLE','package',2,'p_package','analizadorSintactico.py',32),
  ('package -> PACKAGE MAIN','package',2,'p_package','analizadorSintactico.py',33),
  ('main -> FUNCTION MAIN LPAREN RPAREN','main',4,'p_main','analizadorSintactico.py',36),
  ('blocks -> block','blocks',1,'p_blocks','analizadorSintactico.py',39),
  ('blocks -> block blocks','blocks',2,'p_blocks','analizadorSintactico.py',40),
  ('blocks -> block SEMICOLON blocks','blocks',3,'p_blocks','analizadorSintactico.py',41),
  ('block -> print_statement','block',1,'p_block','analizadorSintactico.py',44),
  ('block -> input_statement','block',1,'p_block','analizadorSintactico.py',45),
  ('block -> operation','block',1,'p_block','analizadorSintactico.py',46),
  ('block -> data_structure','block',1,'p_block','analizadorSintactico.py',47),
  ('block -> control_structure','block',1,'p_block','analizadorSintactico.py',48),
  ('block -> function','block',1,'p_block','analizadorSintactico.py',49),
  ('block -> parameters','block',1,'p_block','analizadorSintactico.py',50),
  ('block -> variable_declaration','block',1,'p_block','analizadorSintactico.py',51),
  ('block -> variable_assignation','block',1,'p_block','analizadorSintactico.py',52),
  ('block -> return','block',1,'p_block','analizadorSintactico.py',53),
  ('variable_declaration -> VAR VARIABLE type','variable_declaration',3,'p_variable_declaration','analizadorSintactico.py',59),
  ('variable_declaration -> VAR VARIABLE type ASSIGN value','variable_declaration',5,'p_variable_declaration','analizadorSintactico.py',60),
  ('variable_declaration -> VARIABLE SHORTASSIGN value','variable_declaration',3,'p_variable_declaration_short','analizadorSintactico.py',73),
  ('variable_declaration -> VARIABLE SHORTASSIGN operation','variable_declaration',3,'p_variable_declaration_short','analizadorSintactico.py',74),
  ('variable_declaration -> VAR variables type','variable_declaration',3,'p_variable_declaration_multiple','analizadorSintactico.py',83),
  ('variable_declaration -> VAR variables type ASSIGN value','variable_declaration',5,'p_variable_declaration_multiple','analizadorSintactico.py',84),
  ('variable_declaration -> CONST VARIABLE ASSIGN value','variable_declaration',4,'p_variable_declaration_constant','analizadorSintactico.py',94),
  ('variable_assignation -> VARIABLE assignation value','variable_assignation',3,'p_variable_assignation','analizadorSintactico.py',105),
  ('variable_assignation -> VARIABLE assignation operation','variable_assignation',3,'p_variable_assignation','analizadorSintactico.py',106),
  ('variable_assignation -> VARIABLE double_operator','variable_assignation',2,'p_variable_assignation_double','analizadorSintactico.py',115),
  ('variable_assignation -> variables assignation value','variable_assignation',3,'p_variable_assignation_multiple','analizadorSintactico.py',119),
  ('variable_assignation -> map_assign','variable_assignation',1,'p_variable_assignation_structures','analizadorSintactico.py',122),
  ('variable_assignation -> array_assign','variable_assignation',1,'p_variable_assignation_structures','analizadorSintactico.py',123),
  ('variables -> VARIABLE','variables',1,'p_variables','analizadorSintactico.py',126),
  ('variables -> VARIABLE COMMA variables','variables',3,'p_variables','analizadorSintactico.py',127),
  ('assignation -> ASSIGN','assignation',1,'p_assignation','analizadorSintactico.py',135),
  ('assignation -> PLUSASSIGN','assignation',1,'p_assignation','analizadorSintactico.py',136),
  ('assignation -> MINUSASSIGN','assignation',1,'p_assignation','analizadorSintactico.py',137),
  ('assignation -> TIMESASSIGN','assignation',1,'p_assignation','analizadorSintactico.py',138),
  ('assignation -> DIVIDEASSIGN','assignation',1,'p_assignation','analizadorSintactico.py',139),
  ('assignation -> MODASSIGN','assignation',1,'p_assignation','analizadorSintactico.py',140),
  ('function -> FUNCTION VARIABLE LPAREN RPAREN LBRACE blocks RBRACE','function',7,'p_function','analizadorSintactico.py',145),
  ('function -> FUNCTION VARIABLE LPAREN parameters RPAREN LBRACE blocks RBRACE','function',8,'p_function','analizadorSintactico.py',146),
  ('function -> FUNCTION VARIABLE LPAREN RPAREN type LBRACE RBRACE','function',7,'p_function','analizadorSintactico.py',147),
  ('function -> FUNCTION VARIABLE LPAREN parameters RPAREN type LBRACE RBRACE','function',8,'p_function','analizadorSintactico.py',148),
  ('function -> FUNCTION VARIABLE LPAREN parameters RPAREN type LBRACE blocks RBRACE','function',9,'p_function','analizadorSintactico.py',149),
  ('function -> FUNCTION VARIABLE LPAREN RPAREN type LBRACE blocks RBRACE','function',8,'p_function','analizadorSintactico.py',150),
  ('return -> RETURN values','return',2,'p_return','analizadorSintactico.py',154),
  ('return -> RETURN value LBRACKET value RBRACKET','return',5,'p_return','analizadorSintactico.py',155),
  ('return -> RETURN value PERIOD value','return',4,'p_return','analizadorSintactico.py',156),
  ('return -> RETURN TRUE','return',2,'p_return','analizadorSintactico.py',157),
  ('return -> RETURN FALSE','return',2,'p_return','analizadorSintactico.py',158),
  ('values -> value','values',1,'p_values','analizadorSintactico.py',162),
  ('values -> value COMMA values','values',3,'p_values','analizadorSintactico.py',163),
  ('value -> VARIABLE','value',1,'p_value','analizadorSintactico.py',166),
  ('value -> VARIABLE LBRACKET RBRACKET','value',3,'p_value','analizadorSintactico.py',167),
  ('value -> VARIABLE LBRACKET value RBRACKET','value',4,'p_value','analizadorSintactico.py',168),
  ('value -> not_variable_value','value',1,'p_value','analizadorSintactico.py',169),
  ('not_variable_value -> CHARSTRING','not_variable_value',1,'p_not_variable_value','analizadorSintactico.py',176),
  ('not_variable_value -> number','not_variable_value',1,'p_not_variable_value','analizadorSintactico.py',177),
  ('number -> INT','number',1,'p_number','analizadorSintactico.py',180),
  ('number -> FLOAT','number',1,'p_number','analizadorSintactico.py',181),
  ('print_statement -> PRINT LPAREN values RPAREN','print_statement',4,'p_print_statement','analizadorSintactico.py',185),
  ('print_statement -> PRINTF LPAREN FORMATSTRING COMMA values RPAREN','print_statement',6,'p_print_statement','analizadorSintactico.py',186),
  ('print_statement -> PRINT LPAREN operation RPAREN','print_statement',4,'p_print_statement','analizadorSintactico.py',187),
  ('print_statement -> PRINT LPAREN RPAREN','print_statement',3,'p_print_statement','analizadorSintactico.py',188),
  ('input_statement -> INPUT LPAREN values RPAREN','input_statement',4,'p_input_statement','analizadorSintactico.py',192),
  ('input_statement -> INPUT LPAREN operation RPAREN','input_statement',4,'p_input_statement','analizadorSintactico.py',193),
  ('input_statement -> INPUT LPAREN RPAREN','input_statement',3,'p_input_statement','analizadorSintactico.py',194),
  ('operation -> value operator value','operation',3,'p_operation','analizadorSintactico.py',198),
  ('operation -> value operator LPAREN value RPAREN','operation',5,'p_operation_complex','analizadorSintactico.py',206),
  ('operation -> LPAREN value RPAREN operator value','operation',5,'p_operation_complex','analizadorSintactico.py',207),
  ('operation -> LPAREN value operator value RPAREN','operation',5,'p_operation_complex','analizadorSintactico.py',208),
  ('operation -> value operator operation','operation',3,'p_operation_complex','analizadorSintactico.py',209),
  ('operation -> LPAREN value operator operation RPAREN','operation',5,'p_operation_complex','analizadorSintactico.py',210),
  ('operation -> LPAREN value RPAREN operator operation','operation',5,'p_operation_complex','analizadorSintactico.py',211),
  ('operation -> value operator LPAREN operation RPAREN','operation',5,'p_operation_complex','analizadorSintactico.py',212),
  ('operation -> value double_operator','operation',2,'p_operation_single','analizadorSintactico.py',216),
  ('operator -> PLUS','operator',1,'p_operator','analizadorSintactico.py',219),
  ('operator -> MINUS','operator',1,'p_operator','analizadorSintactico.py',220),
  ('operator -> TIMES','operator',1,'p_operator','analizadorSintactico.py',221),
  ('operator -> DIVIDE','operator',1,'p_operator','analizadorSintactico.py',222),
  ('operator -> ASSIGN','operator',1,'p_operator','analizadorSintactico.py',223),
  ('double_operator -> INCREMENT','double_operator',1,'p_double_operator','analizadorSintactico.py',226),
  ('double_operator -> DECREMENT','double_operator',1,'p_double_operator','analizadorSintactico.py',227),
  ('parameters -> parameter','parameters',1,'p_parameters','analizadorSintactico.py',232),
  ('parameters -> parameter COMMA parameters','parameters',3,'p_parameters','analizadorSintactico.py',233),
  ('parameter -> VARIABLE type','parameter',2,'p_parameter','analizadorSintactico.py',237),
  ('type -> INT','type',1,'p_type','analizadorSintactico.py',240),
  ('type -> INT32','type',1,'p_type','analizadorSintactico.py',241),
  ('type -> INT64','type',1,'p_type','analizadorSintactico.py',242),
  ('type -> STRING','type',1,'p_type','analizadorSintactico.py',243),
  ('type -> FLOAT','type',1,'p_type','analizadorSintactico.py',244),
  ('type -> FLOAT32','type',1,'p_type','analizadorSintactico.py',245),
  ('type -> FLOAT64','type',1,'p_type','analizadorSintactico.py',246),
  ('type -> BOOL','type',1,'p_type','analizadorSintactico.py',247),
  ('control_structure -> conditional_structure','control_structure',1,'p_control_structure','analizadorSintactico.py',252),
  ('control_structure -> for_estructure','control_structure',1,'p_control_structure','analizadorSintactico.py',253),
  ('control_structure -> switch_structure','control_structure',1,'p_control_structure','analizadorSintactico.py',254),
  ('conditional_structure -> IF conditions conditional_body','conditional_structure',3,'p_conditional_structure','analizadorSintactico.py',259),
  ('conditional_structure -> IF conditions conditional_body ELSE conditional_body','conditional_structure',5,'p_conditional_structure','analizadorSintactico.py',260),
  ('conditional_structure -> IF conditions conditional_body ELSE IF conditions conditional_body ELSE conditional_body','conditional_structure',9,'p_conditional_structure','analizadorSintactico.py',261),
  ('conditional_body -> LBRACE statement RBRACE','conditional_body',3,'p_conditional_body','analizadorSintactico.py',263),
  ('conditional_body -> LBRACE BREAK RBRACE','conditional_body',3,'p_conditional_body','analizadorSintactico.py',264),
  ('conditional_body -> LBRACE CONTINUE RBRACE','conditional_body',3,'p_conditional_body','analizadorSintactico.py',265),
  ('conditions -> condition','conditions',1,'p_conditions','analizadorSintactico.py',268),
  ('conditions -> condition logical_operator conditions','conditions',3,'p_conditions','analizadorSintactico.py',269),
  ('condition -> value relational_operator value','condition',3,'p_condition','analizadorSintactico.py',273),
  ('logical_operator -> AND','logical_operator',1,'p_logical_operator','analizadorSintactico.py',276),
  ('logical_operator -> OR','logical_operator',1,'p_logical_operator','analizadorSintactico.py',277),
  ('logical_operator -> NOT','logical_operator',1,'p_logical_operator','analizadorSintactico.py',278),
  ('relational_operator -> GREATER','relational_operator',1,'p_relational_operator','analizadorSintactico.py',281),
  ('relational_operator -> LESS','relational_operator',1,'p_relational_operator','analizadorSintactico.py',282),
  ('relational_operator -> GREATEREQUALS','relational_operator',1,'p_relational_operator','analizadorSintactico.py',283),
  ('relational_operator -> LESSEQUALS','relational_operator',1,'p_relational_operator','analizadorSintactico.py',284),
  ('relational_operator -> EQUALS','relational_operator',1,'p_relational_operator','analizadorSintactico.py',285),
  ('relational_operator -> DIFFERENT','relational_operator',1,'p_relational_operator','analizadorSintactico.py',286),
  ('for_estructure -> for_initialization','for_estructure',1,'p_for_estructure','analizadorSintactico.py',293),
  ('for_estructure -> for_infinite_bucle','for_estructure',1,'p_for_estructure','analizadorSintactico.py',294),
  ('for_estructure -> for_iterator','for_estructure',1,'p_for_estructure','analizadorSintactico.py',295),
  ('for_initialization -> FOR VARIABLE SHORTASSIGN value SEMICOLON condition SEMICOLON value double_operator LBRACE statement RBRACE','for_initialization',12,'p_for_initialization','analizadorSintactico.py',298),
  ('for_infinite_bucle -> FOR LBRACE statement RBRACE','for_infinite_bucle',4,'p_for_infinite_bucle','analizadorSintactico.py',301),
  ('for_iterator -> FOR VARIABLE COMMA VARIABLE SHORTASSIGN RANGE VARIABLE LBRACE statement RBRACE','for_iterator',10,'p_for_iterator','analizadorSintactico.py',304),
  ('switch_structure -> SWITCH switch_expression LBRACE case_blocks RBRACE','switch_structure',5,'p_switch_structure','analizadorSintactico.py',309),
  ('switch_expression -> VARIABLE SHORTASSIGN value','switch_expression',3,'p_switch_expression','analizadorSintactico.py',312),
  ('switch_expression -> empty','switch_expression',1,'p_switch_expression','analizadorSintactico.py',313),
  ('case_blocks -> case_block','case_blocks',1,'p_case_blocks','analizadorSintactico.py',316),
  ('case_blocks -> case_block case_blocks','case_blocks',2,'p_case_blocks','analizadorSintactico.py',317),
  ('case_block -> CASE values COLON statement','case_block',4,'p_case_block','analizadorSintactico.py',320),
  ('case_block -> DEFAULT COLON statement','case_block',3,'p_case_block','analizadorSintactico.py',321),
  ('empty -> <empty>','empty',0,'p_empty','analizadorSintactico.py',325),
  ('data_structure -> array_structure','data_structure',1,'p_data_structure','analizadorSintactico.py',332),
  ('data_structure -> map_structure','data_structure',1,'p_data_structure','analizadorSintactico.py',333),
  ('data_structure -> slice_structure','data_structure',1,'p_data_structure','analizadorSintactico.py',334),
  ('data_structure -> struct_structure','data_structure',1,'p_data_structure','analizadorSintactico.py',335),
  ('struct_structure -> TYPE VARIABLE STRUCT LBRACE struct_fields RBRACE','struct_structure',6,'p_struct_structure','analizadorSintactico.py',338),
  ('struct_fields -> struct_field','struct_fields',1,'p_struct_fields','analizadorSintactico.py',341),
  ('struct_fields -> struct_field struct_fields','struct_fields',2,'p_struct_fields','analizadorSintactico.py',342),
  ('struct_field -> VARIABLE type','struct_field',2,'p_struct_field','analizadorSintactico.py',345),
  ('array_structure -> VAR VARIABLE LBRACKET INT RBRACKET type','array_structure',6,'p_array_structure','analizadorSintactico.py',350),
  ('array_structure -> VAR VARIABLE ASSIGN LBRACKET INT RBRACKET type LBRACE values RBRACE','array_structure',10,'p_array_structure','analizadorSintactico.py',351),
  ('array_assign -> VARIABLE LBRACKET INT RBRACKET ASSIGN value','array_assign',6,'p_array_assign','analizadorSintactico.py',355),
  ('map_structure -> VARIABLE SHORTASSIGN MAP LBRACKET type RBRACKET type LBRACE map_values RBRACE','map_structure',10,'p_map_structure','analizadorSintactico.py',360),
  ('map_structure -> VARIABLE SHORTASSIGN MAKE LPAREN MAP LBRACKET type RBRACKET type RPAREN','map_structure',10,'p_map_structure','analizadorSintactico.py',361),
  ('map_values -> map_value','map_values',1,'p_map_values','analizadorSintactico.py',364),
  ('map_values -> map_value COMMA map_values','map_values',3,'p_map_values','analizadorSintactico.py',365),
  ('map_value -> value COLON value','map_value',3,'p_map_value','analizadorSintactico.py',368),
  ('map_assign -> VARIABLE LBRACKET value RBRACKET ASSIGN value','map_assign',6,'p_map_assign','analizadorSintactico.py',371),
  ('slice_structure -> VARIABLE SHORTASSIGN LBRACKET RBRACKET type LBRACE values RBRACE','slice_structure',8,'p_slice_structure','analizadorSintactico.py',376),
  ('slice_structure -> VAR VARIABLE LBRACKET RBRACKET type','slice_structure',5,'p_slice_structure','analizadorSintactico.py',377),
  ('slice_structure -> VARIABLE SHORTASSIGN LBRACKET RBRACKET type','slice_structure',5,'p_slice_structure','analizadorSintactico.py',378),
  ('slice_structure -> VARIABLE ASSIGN append_statement','slice_structure',3,'p_slice_structure','analizadorSintactico.py',379),
  ('append_statement -> APPEND LPAREN VARIABLE COMMA values RPAREN','append_statement',6,'p_append_statement','analizadorSintactico.py',382),
  ('append_statement -> APPEND LPAREN VARIABLE COMMA LBRACKET RBRACKET type LBRACE values RBRACE RPAREN','append_statement',11,'p_append_statement','analizadorSintactico.py',383),
]
