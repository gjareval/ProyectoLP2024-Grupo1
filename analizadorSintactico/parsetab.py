
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AMPERSAND AND APPEND ASSIGN BOOL BREAK CASE CHARSTRING COLON COMMA CONST CONTINUE DECREMENT DEFAULT DIFFERENT DIVIDE DIVIDEASSIGN ELSE EQUALS FALSE FLOAT FLOAT32 FLOAT64 FOR FORMATSTRING FUNCTION GREATER GREATEREQUALS IDENTIFIER IF IMPORT INCREMENT INPUT INT INT32 INT64 LBRACE LBRACKET LESS LESSEQUALS LPAREN MAIN MAKE MAP MINUS MINUSASSIGN MOD MODASSIGN NOT OR PACKAGE PLUS PLUSASSIGN PRINT PRINTF RANGE RBRACE RBRACKET RETURN RPAREN SEMICOLON SHORTASSIGN STRING STRUCT SWITCH TEXT TIMES TIMESASSIGN TRUE TYPE VAR VARIABLEstatement : blocks\n                 | import blocks\n                 | package blocks\n                 | package import blocks\n                 | main LBRACE blocks RBRACE\n                 | package main LBRACE blocks RBRACE\n                 | import main LBRACE blocks RBRACE\n                 | package import main LBRACE blocks RBRACEimport :\n              | IMPORT CHARSTRING\n              | IMPORT LPAREN values_import RPARENvalues_import : CHARSTRING\n                     | CHARSTRING values_importpackage : PACKAGE VARIABLEmain : FUNCTION MAIN LPAREN RPARENblocks : block\n              | block blocksblock : print_statement\n             | input_statement\n             | conditional_structure\n             | operation\n             | list_structure\n             | map_estructure\n             | map_assign\n             | for_estructure\n             | structure\n             | function\n             | parameters\n             | variable_declaration\n             | switch_structure\n             | slice_structure\n             variable_declaration : VAR VARIABLE type\n                            | VAR VARIABLE ASSIGN value\n                            | VAR VARIABLE ASSIGN list_structure\n                            | VARIABLE SHORTASSIGN value\n                            | VARIABLE SHORTASSIGN operationstructure : TYPE VARIABLE STRUCT LBRACE statement RBRACEfunction : FUNCTION VARIABLE LPAREN RPAREN LBRACE blocks RBRACE   \n                | FUNCTION VARIABLE LPAREN parameters RPAREN LBRACE blocks RBRACE\n                | FUNCTION VARIABLE LPAREN RPAREN type LBRACE RETURN value RBRACE\n                | FUNCTION VARIABLE LPAREN parameters RPAREN type LBRACE RETURN value RBRACE\n                | FUNCTION VARIABLE LPAREN parameters RPAREN type LBRACE blocks RETURN value RBRACE\n                values : value \n              | value COMMA valuesstring_value : value\n                    | CHARSTRING value : VARIABLE\n              | number\n              | CHARSTRINGnumber : INT\n              | FLOATprint_statement : PRINT LPAREN values RPAREN\n                       | PRINT LPAREN string_value RPAREN\n                       | PRINTF LPAREN FORMATSTRING COMMA values RPAREN\n                       | PRINT LPAREN string_value COMMA values RPAREN\n                       | PRINT LPAREN operation RPAREN\n                       | PRINT LPAREN RPARENinput_statement : INPUT LPAREN values RPAREN\n                       | INPUT LPAREN operation RPAREN\n                       | INPUT LPAREN RPARENoperation : value operator value\n                 | value operator operationoperation : value double_operatoroperator : PLUS\n                | MINUS\n                | TIMES\n                | DIVIDE\n                | ASSIGNdouble_operator : INCREMENT\n                       | DECREMENTparameters : parameter\n                  | parameter parameters\n                  | parameter COMMA parameters\n                  parameter : VARIABLE typetype : INT\n            | INT32\n            | INT64\n            | STRING\n            | FLOAT\n            | FLOAT32\n            | FLOAT64\n            | BOOL\n            conditional_structure : IF conditions conditional_body\n                             | IF conditions conditional_body ELSE conditional_body\n                             | IF conditions conditional_body ELSE IF conditions conditional_body ELSE conditional_bodyconditional_body : LBRACE statement RBRACE\n                        | LBRACE BREAK RBRACE\n                        | LBRACE CONTINUE RBRACEconditions : condition\n                  | condition logical_operator conditions\n                  condition : value relational_operator valuelogical_operator : AND\n                        | OR\n                        | NOTrelational_operator : GREATER\n                           | LESS\n                           | GREATEREQUALS\n                           | LESSEQUALS\n                           | EQUALS\n                           | DIFFERENT\n    for_estructure : for_initialization\n                      | for_infinite_bucle\n                      | for_iteratorfor_initialization : FOR VARIABLE SHORTASSIGN value SEMICOLON condition SEMICOLON value double_operator LBRACE statement RBRACEfor_infinite_bucle : FOR LBRACE statement RBRACEfor_iterator : FOR VARIABLE SEMICOLON VARIABLE SHORTASSIGN RANGE VARIABLE LBRACE statement RBRACEswitch_structure : SWITCH switch_expression LBRACE case_blocks RBRACEswitch_expression : value\n                         | emptycase_blocks : case_block\n                   | case_block case_blockscase_block : CASE values COLON statement\n                  | DEFAULT COLON statementempty :list_structure : empty_list\n                      | list_with_data\n                      | defined_list\n                      empty_list : LBRACE RBRACElist_with_data : LBRACE values RBRACEdefined_list : TYPE VARIABLE LBRACE values RBRACEmap_estructure : VARIABLE SHORTASSIGN MAP LBRACKET type RBRACKET type LBRACE map_values RBRACE\n                      | VARIABLE SHORTASSIGN MAKE LPAREN MAP LBRACKET type RBRACKET type RPARENmap_values : map_value\n                  | map_value COMMA map_valuesmap_value : string_value COLON string_valuemap_assign : VARIABLE LBRACKET string_value RBRACKET ASSIGN string_valueslice_structure : VARIABLE SHORTASSIGN LBRACKET RBRACKET type LBRACE values RBRACE\n                       | VAR VARIABLE LBRACKET RBRACKET type\n                       | VARIABLE SHORTASSIGN LBRACKET RBRACKET type\n                       | VARIABLE ASSIGN append_statementappend_statement : APPEND LPAREN VARIABLE COMMA values RPAREN'
    
_lr_action_items = {'FUNCTION':([0,3,4,7,9,13,14,15,16,17,18,19,20,21,22,23,24,25,26,32,33,34,35,36,37,39,42,44,45,49,51,52,55,58,60,63,65,66,67,68,69,70,71,72,82,88,89,91,99,100,103,105,112,113,115,116,117,122,128,131,132,144,145,148,149,157,161,171,172,174,176,177,184,186,187,196,201,205,211,212,213,214,216,218,219,222,229,233,235,236,238,239,247,250,256,258,260,265,270,273,276,279,280,282,283,286,288,],[12,12,12,57,-49,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-115,-116,-117,-101,-102,-103,-71,-48,-50,-51,12,57,-118,-47,-10,-14,-74,-75,-76,-77,-78,-79,-80,-81,-82,-63,-69,-70,-72,12,57,57,-119,-35,-36,-45,-46,-130,-57,-60,-83,12,-61,-62,-73,-32,57,-11,-52,-53,-56,-58,-59,12,-33,-34,-105,-129,57,-84,-86,-87,-88,-120,-128,-107,12,-126,57,-55,-54,-37,12,-38,57,-127,-131,-39,12,-40,-85,-121,-122,-41,12,-106,-42,-104,]),'PRINT':([0,3,4,7,9,13,14,15,16,17,18,19,20,21,22,23,24,25,26,32,33,34,35,36,37,39,42,44,45,49,51,52,55,58,60,63,65,66,67,68,69,70,71,72,82,88,89,91,99,100,103,105,112,113,115,116,117,122,128,131,132,144,145,148,149,157,161,171,172,174,176,177,184,186,187,196,201,205,211,212,213,214,216,218,219,222,229,233,235,236,238,239,247,250,256,258,260,265,270,273,276,279,280,282,283,286,288,],[27,27,27,27,-49,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-115,-116,-117,-101,-102,-103,-71,-48,-50,-51,27,27,-118,-47,-10,-14,-74,-75,-76,-77,-78,-79,-80,-81,-82,-63,-69,-70,-72,27,27,27,-119,-35,-36,-45,-46,-130,-57,-60,-83,27,-61,-62,-73,-32,27,-11,-52,-53,-56,-58,-59,27,-33,-34,-105,-129,27,-84,-86,-87,-88,-120,-128,-107,27,-126,27,-55,-54,-37,27,-38,27,-127,-131,-39,27,-40,-85,-121,-122,-41,27,-106,-42,-104,]),'PRINTF':([0,3,4,7,9,13,14,15,16,17,18,19,20,21,22,23,24,25,26,32,33,34,35,36,37,39,42,44,45,49,51,52,55,58,60,63,65,66,67,68,69,70,71,72,82,88,89,91,99,100,103,105,112,113,115,116,117,122,128,131,132,144,145,148,149,157,161,171,172,174,176,177,184,186,187,196,201,205,211,212,213,214,216,218,219,222,229,233,235,236,238,239,247,250,256,258,260,265,270,273,276,279,280,282,283,286,288,],[28,28,28,28,-49,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-115,-116,-117,-101,-102,-103,-71,-48,-50,-51,28,28,-118,-47,-10,-14,-74,-75,-76,-77,-78,-79,-80,-81,-82,-63,-69,-70,-72,28,28,28,-119,-35,-36,-45,-46,-130,-57,-60,-83,28,-61,-62,-73,-32,28,-11,-52,-53,-56,-58,-59,28,-33,-34,-105,-129,28,-84,-86,-87,-88,-120,-128,-107,28,-126,28,-55,-54,-37,28,-38,28,-127,-131,-39,28,-40,-85,-121,-122,-41,28,-106,-42,-104,]),'INPUT':([0,3,4,7,9,13,14,15,16,17,18,19,20,21,22,23,24,25,26,32,33,34,35,36,37,39,42,44,45,49,51,52,55,58,60,63,65,66,67,68,69,70,71,72,82,88,89,91,99,100,103,105,112,113,115,116,117,122,128,131,132,144,145,148,149,157,161,171,172,174,176,177,184,186,187,196,201,205,211,212,213,214,216,218,219,222,229,233,235,236,238,239,247,250,256,258,260,265,270,273,276,279,280,282,283,286,288,],[29,29,29,29,-49,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-115,-116,-117,-101,-102,-103,-71,-48,-50,-51,29,29,-118,-47,-10,-14,-74,-75,-76,-77,-78,-79,-80,-81,-82,-63,-69,-70,-72,29,29,29,-119,-35,-36,-45,-46,-130,-57,-60,-83,29,-61,-62,-73,-32,29,-11,-52,-53,-56,-58,-59,29,-33,-34,-105,-129,29,-84,-86,-87,-88,-120,-128,-107,29,-126,29,-55,-54,-37,29,-38,29,-127,-131,-39,29,-40,-85,-121,-122,-41,29,-106,-42,-104,]),'IF':([0,3,4,7,9,13,14,15,16,17,18,19,20,21,22,23,24,25,26,32,33,34,35,36,37,39,42,44,45,49,51,52,55,58,60,63,65,66,67,68,69,70,71,72,82,88,89,91,99,100,103,105,112,113,115,116,117,122,128,131,132,144,145,148,149,157,161,171,172,174,176,177,178,184,186,187,196,201,205,211,212,213,214,216,218,219,222,229,233,235,236,238,239,247,250,256,258,260,265,270,273,276,279,280,282,283,286,288,],[30,30,30,30,-49,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-115,-116,-117,-101,-102,-103,-71,-48,-50,-51,30,30,-118,-47,-10,-14,-74,-75,-76,-77,-78,-79,-80,-81,-82,-63,-69,-70,-72,30,30,30,-119,-35,-36,-45,-46,-130,-57,-60,-83,30,-61,-62,-73,-32,30,-11,-52,-53,-56,-58,-59,210,30,-33,-34,-105,-129,30,-84,-86,-87,-88,-120,-128,-107,30,-126,30,-55,-54,-37,30,-38,30,-127,-131,-39,30,-40,-85,-121,-122,-41,30,-106,-42,-104,]),'VARIABLE':([0,3,4,6,7,9,10,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,30,32,33,34,35,36,37,38,39,40,41,42,43,44,45,49,51,52,55,57,58,60,61,62,63,65,66,67,68,69,70,71,72,75,77,81,82,83,84,85,86,87,88,89,91,92,99,100,103,105,106,112,113,115,116,117,120,122,128,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,147,148,149,150,153,154,157,161,167,171,172,173,174,175,176,177,184,186,187,188,192,196,201,203,205,210,211,212,213,214,216,218,219,222,223,227,229,230,233,235,236,238,239,242,247,248,250,253,255,256,258,260,261,265,270,272,273,276,277,278,279,280,282,283,286,288,],[11,11,11,55,11,-49,60,74,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,55,-115,-116,-117,-101,-102,-103,90,93,94,55,-48,98,-50,-51,11,11,-118,-47,74,-10,-14,55,55,-74,-75,-76,-77,-78,-79,-80,-81,-82,55,55,55,-63,-64,-65,-66,-67,-68,-69,-70,-72,93,11,11,11,-119,55,-35,-36,-45,-46,-130,93,-57,-60,-83,11,55,-92,-93,-94,55,-95,-96,-97,-98,-99,-100,-61,-62,55,-73,-32,55,55,195,11,-11,204,-52,-53,55,-56,55,-58,-59,11,-33,-34,217,55,-105,-129,55,11,55,-84,-86,-87,-88,-120,-128,-107,11,55,55,-126,55,11,-55,-54,-37,11,254,-38,55,11,55,55,-127,-131,-39,55,11,-40,55,-85,-121,55,55,-122,-41,11,-106,-42,-104,]),'TYPE':([0,3,4,7,9,13,14,15,16,17,18,19,20,21,22,23,24,25,26,32,33,34,35,36,37,39,42,44,45,49,51,52,55,58,60,63,65,66,67,68,69,70,71,72,82,88,89,91,99,100,103,105,112,113,115,116,117,122,128,131,132,144,145,148,149,150,157,161,171,172,174,176,177,184,186,187,196,201,205,211,212,213,214,216,218,219,222,229,233,235,236,238,239,247,250,256,258,260,265,270,273,276,279,280,282,283,286,288,],[38,38,38,38,-49,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-115,-116,-117,-101,-102,-103,-71,-48,-50,-51,38,38,-118,-47,-10,-14,-74,-75,-76,-77,-78,-79,-80,-81,-82,-63,-69,-70,-72,38,38,38,-119,-35,-36,-45,-46,-130,-57,-60,-83,38,-61,-62,-73,-32,188,38,-11,-52,-53,-56,-58,-59,38,-33,-34,-105,-129,38,-84,-86,-87,-88,-120,-128,-107,38,-126,38,-55,-54,-37,38,-38,38,-127,-131,-39,38,-40,-85,-121,-122,-41,38,-106,-42,-104,]),'VAR':([0,3,4,7,9,13,14,15,16,17,18,19,20,21,22,23,24,25,26,32,33,34,35,36,37,39,42,44,45,49,51,52,55,58,60,63,65,66,67,68,69,70,71,72,82,88,89,91,99,100,103,105,112,113,115,116,117,122,128,131,132,144,145,148,149,157,161,171,172,174,176,177,184,186,187,196,201,205,211,212,213,214,216,218,219,222,229,233,235,236,238,239,247,250,256,258,260,265,270,273,276,279,280,282,283,286,288,],[40,40,40,40,-49,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-115,-116,-117,-101,-102,-103,-71,-48,-50,-51,40,40,-118,-47,-10,-14,-74,-75,-76,-77,-78,-79,-80,-81,-82,-63,-69,-70,-72,40,40,40,-119,-35,-36,-45,-46,-130,-57,-60,-83,40,-61,-62,-73,-32,40,-11,-52,-53,-56,-58,-59,40,-33,-34,-105,-129,40,-84,-86,-87,-88,-120,-128,-107,40,-126,40,-55,-54,-37,40,-38,40,-127,-131,-39,40,-40,-85,-121,-122,-41,40,-106,-42,-104,]),'SWITCH':([0,3,4,7,9,13,14,15,16,17,18,19,20,21,22,23,24,25,26,32,33,34,35,36,37,39,42,44,45,49,51,52,55,58,60,63,65,66,67,68,69,70,71,72,82,88,89,91,99,100,103,105,112,113,115,116,117,122,128,131,132,144,145,148,149,157,161,171,172,174,176,177,184,186,187,196,201,205,211,212,213,214,216,218,219,222,229,233,235,236,238,239,247,250,256,258,260,265,270,273,276,279,280,282,283,286,288,],[41,41,41,41,-49,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-115,-116,-117,-101,-102,-103,-71,-48,-50,-51,41,41,-118,-47,-10,-14,-74,-75,-76,-77,-78,-79,-80,-81,-82,-63,-69,-70,-72,41,41,41,-119,-35,-36,-45,-46,-130,-57,-60,-83,41,-61,-62,-73,-32,41,-11,-52,-53,-56,-58,-59,41,-33,-34,-105,-129,41,-84,-86,-87,-88,-120,-128,-107,41,-126,41,-55,-54,-37,41,-38,41,-127,-131,-39,41,-40,-85,-121,-122,-41,41,-106,-42,-104,]),'CHARSTRING':([0,3,4,6,7,8,9,13,14,15,16,17,18,19,20,21,22,23,24,25,26,30,32,33,34,35,36,37,39,41,42,44,45,49,51,52,55,58,59,60,61,62,63,65,66,67,68,69,70,71,72,75,77,81,82,83,84,85,86,87,88,89,91,99,100,103,105,106,108,112,113,115,116,117,122,128,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,147,148,149,150,153,157,161,171,172,173,174,175,176,177,184,186,187,192,196,201,203,205,210,211,212,213,214,216,218,219,222,223,227,229,230,233,235,236,238,239,247,248,250,253,255,256,258,260,261,265,270,272,273,276,277,278,279,280,282,283,286,288,],[9,9,9,9,9,58,-49,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,9,-115,-116,-117,-101,-102,-103,-71,9,-48,-50,-51,9,9,-118,-47,-10,108,-14,9,116,-74,-75,-76,-77,-78,-79,-80,-81,-82,116,9,9,-63,-64,-65,-66,-67,-68,-69,-70,-72,9,9,9,-119,9,108,-35,-36,-45,-46,-130,-57,-60,-83,9,9,-92,-93,-94,9,-95,-96,-97,-98,-99,-100,-61,-62,9,-73,-32,9,9,9,-11,-52,-53,9,-56,9,-58,-59,9,-33,-34,9,-105,-129,116,9,9,-84,-86,-87,-88,-120,-128,-107,9,9,9,-126,9,9,-55,-54,-37,9,-38,9,9,9,116,-127,-131,-39,9,9,-40,9,-85,-121,116,116,-122,-41,9,-106,-42,-104,]),'LBRACE':([0,3,4,5,7,9,13,14,15,16,17,18,19,20,21,22,23,24,25,26,32,33,34,35,36,37,39,41,42,43,44,45,47,49,50,51,52,55,58,60,63,65,66,67,68,69,70,71,72,78,79,82,88,89,90,91,95,96,97,99,100,102,103,105,112,113,115,116,117,122,128,131,132,144,145,146,148,149,150,157,161,168,169,171,172,174,176,177,178,182,183,184,186,187,196,201,205,206,207,211,212,213,214,216,217,218,219,222,229,233,234,235,236,237,238,239,243,247,250,254,256,258,260,263,265,270,273,274,276,279,280,282,283,286,288,],[6,6,6,51,6,-49,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-115,-116,-117,-101,-102,-103,-71,-114,-48,99,-50,-51,100,6,103,6,-118,-47,-10,-14,-74,-75,-76,-77,-78,-79,-80,-81,-82,132,-89,-63,-69,-70,147,-72,152,-108,-109,6,6,157,6,-119,-35,-36,-45,-46,-130,-57,-60,-83,6,-61,-62,184,-73,-32,6,6,-11,-15,205,-52,-53,-56,-58,-59,132,-90,-91,6,-33,-34,-105,227,6,232,233,-84,-86,-87,-88,-120,147,-128,-107,6,-126,6,250,-55,-54,132,-37,6,255,-38,6,265,-127,-131,-39,132,6,-40,-85,282,-121,-122,-41,6,-106,-42,-104,]),'FOR':([0,3,4,7,9,13,14,15,16,17,18,19,20,21,22,23,24,25,26,32,33,34,35,36,37,39,42,44,45,49,51,52,55,58,60,63,65,66,67,68,69,70,71,72,82,88,89,91,99,100,103,105,112,113,115,116,117,122,128,131,132,144,145,148,149,157,161,171,172,174,176,177,184,186,187,196,201,205,211,212,213,214,216,218,219,222,229,233,235,236,238,239,247,250,256,258,260,265,270,273,276,279,280,282,283,286,288,],[43,43,43,43,-49,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-115,-116,-117,-101,-102,-103,-71,-48,-50,-51,43,43,-118,-47,-10,-14,-74,-75,-76,-77,-78,-79,-80,-81,-82,-63,-69,-70,-72,43,43,43,-119,-35,-36,-45,-46,-130,-57,-60,-83,43,-61,-62,-73,-32,43,-11,-52,-53,-56,-58,-59,43,-33,-34,-105,-129,43,-84,-86,-87,-88,-120,-128,-107,43,-126,43,-55,-54,-37,43,-38,43,-127,-131,-39,43,-40,-85,-121,-122,-41,43,-106,-42,-104,]),'INT':([0,3,4,6,7,9,11,13,14,15,16,17,18,19,20,21,22,23,24,25,26,30,32,33,34,35,36,37,39,41,42,44,45,49,51,52,55,58,60,61,62,63,65,66,67,68,69,70,71,72,75,77,81,82,83,84,85,86,87,88,89,91,93,94,99,100,103,105,106,112,113,115,116,117,122,128,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,147,148,149,150,153,157,161,163,164,169,171,172,173,174,175,176,177,184,186,187,189,192,196,201,203,205,207,210,211,212,213,214,216,218,219,222,223,226,227,228,229,230,233,235,236,238,239,247,248,250,253,255,256,257,258,260,261,265,270,272,273,276,277,278,279,280,282,283,286,288,],[44,44,44,44,44,-49,65,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,44,-115,-116,-117,-101,-102,-103,-71,44,-48,-50,-51,44,44,-118,-47,-10,-14,44,44,-74,-75,-76,-77,-78,-79,-80,-81,-82,44,44,44,-63,-64,-65,-66,-67,-68,-69,-70,-72,65,65,44,44,44,-119,44,-35,-36,-45,-46,-130,-57,-60,-83,44,44,-92,-93,-94,44,-95,-96,-97,-98,-99,-100,-61,-62,44,-73,-32,44,44,44,-11,65,65,65,-52,-53,44,-56,44,-58,-59,44,-33,-34,65,44,-105,-129,44,44,65,44,-84,-86,-87,-88,-120,-128,-107,44,44,65,44,65,-126,44,44,-55,-54,-37,44,-38,44,44,44,44,-127,65,-131,-39,44,44,-40,44,-85,-121,44,44,-122,-41,44,-106,-42,-104,]),'FLOAT':([0,3,4,6,7,9,11,13,14,15,16,17,18,19,20,21,22,23,24,25,26,30,32,33,34,35,36,37,39,41,42,44,45,49,51,52,55,58,60,61,62,63,65,66,67,68,69,70,71,72,75,77,81,82,83,84,85,86,87,88,89,91,93,94,99,100,103,105,106,112,113,115,116,117,122,128,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,147,148,149,150,153,157,161,163,164,169,171,172,173,174,175,176,177,184,186,187,189,192,196,201,203,205,207,210,211,212,213,214,216,218,219,222,223,226,227,228,229,230,233,235,236,238,239,247,248,250,253,255,256,257,258,260,261,265,270,272,273,276,277,278,279,280,282,283,286,288,],[45,45,45,45,45,-49,69,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,45,-115,-116,-117,-101,-102,-103,-71,45,-48,-50,-51,45,45,-118,-47,-10,-14,45,45,-74,-75,-76,-77,-78,-79,-80,-81,-82,45,45,45,-63,-64,-65,-66,-67,-68,-69,-70,-72,69,69,45,45,45,-119,45,-35,-36,-45,-46,-130,-57,-60,-83,45,45,-92,-93,-94,45,-95,-96,-97,-98,-99,-100,-61,-62,45,-73,-32,45,45,45,-11,69,69,69,-52,-53,45,-56,45,-58,-59,45,-33,-34,69,45,-105,-129,45,45,69,45,-84,-86,-87,-88,-120,-128,-107,45,45,69,45,69,-126,45,45,-55,-54,-37,45,-38,45,45,45,45,-127,69,-131,-39,45,45,-40,45,-85,-121,45,45,-122,-41,45,-106,-42,-104,]),'IMPORT':([0,4,60,99,132,184,222,239,265,282,],[8,8,-14,8,8,8,8,8,8,8,]),'PACKAGE':([0,99,132,184,222,239,265,282,],[10,10,10,10,10,10,10,10,]),'$end':([1,2,7,9,13,14,15,16,17,18,19,20,21,22,23,24,25,26,32,33,34,35,36,37,39,42,44,45,46,48,52,55,56,63,65,66,67,68,69,70,71,72,82,88,89,91,101,105,112,113,115,116,117,122,128,131,144,145,148,149,159,171,172,174,176,177,186,187,196,197,199,201,211,212,213,214,216,218,219,225,229,235,236,238,247,256,258,260,270,273,276,279,280,283,286,288,],[0,-1,-16,-49,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-115,-116,-117,-101,-102,-103,-71,-48,-50,-51,-2,-3,-118,-47,-17,-74,-75,-76,-77,-78,-79,-80,-81,-82,-63,-69,-70,-72,-4,-119,-35,-36,-45,-46,-130,-57,-60,-83,-61,-62,-73,-32,-5,-52,-53,-56,-58,-59,-33,-34,-105,-7,-6,-129,-84,-86,-87,-88,-120,-128,-107,-8,-126,-55,-54,-37,-38,-127,-131,-39,-40,-85,-121,-122,-41,-106,-42,-104,]),'RBRACE':([2,6,7,9,13,14,15,16,17,18,19,20,21,22,23,24,25,26,32,33,34,35,36,37,39,42,44,45,46,48,52,53,54,55,56,63,65,66,67,68,69,70,71,72,82,88,89,91,101,104,105,112,113,115,116,117,122,128,131,144,145,148,149,155,156,158,159,160,171,172,174,176,177,179,180,181,185,186,187,190,191,196,197,198,199,201,211,212,213,214,215,216,218,219,220,225,229,231,235,236,238,240,244,247,249,252,256,258,259,260,266,267,270,271,273,275,276,279,280,281,283,284,285,286,287,288,],[-1,52,-16,-49,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-115,-116,-117,-101,-102,-103,-71,-48,-50,-51,-2,-3,-118,105,-43,-47,-17,-74,-75,-76,-77,-78,-79,-80,-81,-82,-63,-69,-70,-72,-4,159,-119,-35,-36,-45,-46,-130,-57,-60,-83,-61,-62,-73,-32,196,197,199,-5,-44,-52,-53,-56,-58,-59,212,213,214,216,-33,-34,219,-110,-105,-7,225,-6,-129,-84,-86,-87,-88,238,-120,-128,-107,-111,-8,-126,247,-55,-54,-37,-113,256,-38,260,-112,-127,-131,270,-39,276,-123,-40,280,-85,283,-121,-122,-41,286,-106,-124,-125,-42,288,-104,]),'CASE':([2,7,9,13,14,15,16,17,18,19,20,21,22,23,24,25,26,32,33,34,35,36,37,39,42,44,45,46,48,52,55,56,63,65,66,67,68,69,70,71,72,82,88,89,91,101,105,112,113,115,116,117,122,128,131,144,145,148,149,152,159,171,172,174,176,177,186,187,191,196,197,199,201,211,212,213,214,216,218,219,225,229,235,236,238,240,247,252,256,258,260,270,273,276,279,280,283,286,288,],[-1,-16,-49,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-115,-116,-117,-101,-102,-103,-71,-48,-50,-51,-2,-3,-118,-47,-17,-74,-75,-76,-77,-78,-79,-80,-81,-82,-63,-69,-70,-72,-4,-119,-35,-36,-45,-46,-130,-57,-60,-83,-61,-62,-73,-32,192,-5,-52,-53,-56,-58,-59,-33,-34,192,-105,-7,-6,-129,-84,-86,-87,-88,-120,-128,-107,-8,-126,-55,-54,-37,-113,-38,-112,-127,-131,-39,-40,-85,-121,-122,-41,-106,-42,-104,]),'DEFAULT':([2,7,9,13,14,15,16,17,18,19,20,21,22,23,24,25,26,32,33,34,35,36,37,39,42,44,45,46,48,52,55,56,63,65,66,67,68,69,70,71,72,82,88,89,91,101,105,112,113,115,116,117,122,128,131,144,145,148,149,152,159,171,172,174,176,177,186,187,191,196,197,199,201,211,212,213,214,216,218,219,225,229,235,236,238,240,247,252,256,258,260,270,273,276,279,280,283,286,288,],[-1,-16,-49,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-115,-116,-117,-101,-102,-103,-71,-48,-50,-51,-2,-3,-118,-47,-17,-74,-75,-76,-77,-78,-79,-80,-81,-82,-63,-69,-70,-72,-4,-119,-35,-36,-45,-46,-130,-57,-60,-83,-61,-62,-73,-32,193,-5,-52,-53,-56,-58,-59,-33,-34,193,-105,-7,-6,-129,-84,-86,-87,-88,-120,-128,-107,-8,-126,-55,-54,-37,-113,-38,-112,-127,-131,-39,-40,-85,-121,-122,-41,-106,-42,-104,]),'RETURN':([7,9,13,14,15,16,17,18,19,20,21,22,23,24,25,26,32,33,34,35,36,37,39,42,44,45,52,55,56,63,65,66,67,68,69,70,71,72,82,88,89,91,105,112,113,115,116,117,122,128,131,144,145,148,149,171,172,174,176,177,186,187,196,201,211,212,213,214,216,218,219,229,232,235,236,238,247,250,256,258,260,262,270,273,276,279,280,283,286,288,],[-16,-49,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-115,-116,-117,-101,-102,-103,-71,-48,-50,-51,-118,-47,-17,-74,-75,-76,-77,-78,-79,-80,-81,-82,-63,-69,-70,-72,-119,-35,-36,-45,-46,-130,-57,-60,-83,-61,-62,-73,-32,-52,-53,-56,-58,-59,-33,-34,-105,-129,-84,-86,-87,-88,-120,-128,-107,-126,248,-55,-54,-37,-38,261,-127,-131,-39,272,-40,-85,-121,-122,-41,-106,-42,-104,]),'LPAREN':([8,27,28,29,73,74,111,118,],[59,75,76,77,119,120,165,167,]),'PLUS':([9,11,31,42,44,45,55,112,116,125,130,144,],[-49,-47,83,-48,-50,-51,-47,83,-49,83,83,83,]),'MINUS':([9,11,31,42,44,45,55,112,116,125,130,144,],[-49,-47,84,-48,-50,-51,-47,84,-49,84,84,84,]),'TIMES':([9,11,31,42,44,45,55,112,116,125,130,144,],[-49,-47,85,-48,-50,-51,-47,85,-49,85,85,85,]),'DIVIDE':([9,11,31,42,44,45,55,112,116,125,130,144,],[-49,-47,86,-48,-50,-51,-47,86,-49,86,86,86,]),'ASSIGN':([9,11,31,42,44,45,55,94,112,116,125,130,144,166,],[-49,64,87,-48,-50,-51,-47,150,87,-49,87,87,87,203,]),'INCREMENT':([9,11,31,42,44,45,55,112,116,125,130,144,264,],[-49,-47,88,-48,-50,-51,-47,88,-49,88,88,88,88,]),'DECREMENT':([9,11,31,42,44,45,55,112,116,125,130,144,264,],[-49,-47,89,-48,-50,-51,-47,89,-49,89,89,89,89,]),'COMMA':([9,39,42,44,45,54,55,63,65,66,67,68,69,70,71,72,115,116,123,125,126,130,204,267,285,],[-49,92,-48,-50,-51,106,-47,-74,-75,-76,-77,-78,-79,-80,-81,-82,-45,-46,173,106,175,106,230,277,-125,]),'GREATER':([9,42,44,45,55,80,],[-49,-48,-50,-51,-47,138,]),'LESS':([9,42,44,45,55,80,],[-49,-48,-50,-51,-47,139,]),'GREATEREQUALS':([9,42,44,45,55,80,],[-49,-48,-50,-51,-47,140,]),'LESSEQUALS':([9,42,44,45,55,80,],[-49,-48,-50,-51,-47,141,]),'EQUALS':([9,42,44,45,55,80,],[-49,-48,-50,-51,-47,142,]),'DIFFERENT':([9,42,44,45,55,80,],[-49,-48,-50,-51,-47,143,]),'RPAREN':([9,39,42,44,45,54,55,63,65,66,67,68,69,70,71,72,75,77,82,88,89,91,107,108,116,119,120,121,123,124,125,127,129,130,144,145,148,160,162,170,208,209,246,269,],[-49,-71,-48,-50,-51,-43,-47,-74,-75,-76,-77,-78,-79,-80,-81,-82,122,128,-63,-69,-70,-72,161,-12,-46,168,169,171,172,174,-43,176,177,-43,-61,-62,-73,-44,-13,207,235,236,258,279,]),'COLON':([9,42,44,45,54,55,115,116,160,193,221,268,],[-49,-48,-50,-51,-43,-47,-45,-46,-44,222,239,278,]),'AND':([9,42,44,45,55,79,183,],[-49,-48,-50,-51,-47,134,-91,]),'OR':([9,42,44,45,55,79,183,],[-49,-48,-50,-51,-47,135,-91,]),'NOT':([9,42,44,45,55,79,183,],[-49,-48,-50,-51,-47,136,-91,]),'SEMICOLON':([9,42,44,45,55,98,183,194,241,],[-49,-48,-50,-51,-47,154,-91,223,253,]),'SHORTASSIGN':([11,98,195,],[61,153,224,]),'LBRACKET':([11,61,94,109,202,],[62,110,151,163,228,]),'INT32':([11,93,94,163,164,169,189,207,226,228,257,],[66,66,66,66,66,66,66,66,66,66,66,]),'INT64':([11,93,94,163,164,169,189,207,226,228,257,],[67,67,67,67,67,67,67,67,67,67,67,]),'STRING':([11,93,94,163,164,169,189,207,226,228,257,],[68,68,68,68,68,68,68,68,68,68,68,]),'FLOAT32':([11,93,94,163,164,169,189,207,226,228,257,],[70,70,70,70,70,70,70,70,70,70,70,]),'FLOAT64':([11,93,94,163,164,169,189,207,226,228,257,],[71,71,71,71,71,71,71,71,71,71,71,]),'BOOL':([11,93,94,163,164,169,189,207,226,228,257,],[72,72,72,72,72,72,72,72,72,72,72,]),'MAIN':([12,],[73,]),'RBRACKET':([42,44,45,55,65,66,67,68,69,70,71,72,110,114,115,116,151,200,245,],[-48,-50,-51,-47,-75,-76,-77,-78,-79,-80,-81,-82,164,166,-45,-46,189,226,257,]),'MAP':([61,165,],[109,202,]),'MAKE':([61,],[111,]),'APPEND':([64,],[118,]),'FORMATSTRING':([76,],[126,]),'STRUCT':([90,],[146,]),'ELSE':([131,212,213,214,251,],[178,-86,-87,-88,263,]),'BREAK':([132,],[180,]),'CONTINUE':([132,],[181,]),'RANGE':([224,],[242,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statement':([0,99,132,184,222,239,265,282,],[1,155,179,215,240,252,275,287,]),'blocks':([0,3,4,7,49,51,99,100,103,132,157,184,205,222,233,239,250,265,282,],[2,46,48,56,101,104,2,156,158,2,198,2,231,2,249,2,262,2,2,]),'import':([0,4,99,132,184,222,239,265,282,],[3,49,3,3,3,3,3,3,3,]),'package':([0,99,132,184,222,239,265,282,],[4,4,4,4,4,4,4,4,]),'main':([0,3,4,49,99,132,184,222,239,265,282,],[5,47,50,102,5,5,5,5,5,5,5,]),'block':([0,3,4,7,49,51,99,100,103,132,157,184,205,222,233,239,250,265,282,],[7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'print_statement':([0,3,4,7,49,51,99,100,103,132,157,184,205,222,233,239,250,265,282,],[13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'input_statement':([0,3,4,7,49,51,99,100,103,132,157,184,205,222,233,239,250,265,282,],[14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'conditional_structure':([0,3,4,7,49,51,99,100,103,132,157,184,205,222,233,239,250,265,282,],[15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'operation':([0,3,4,7,49,51,61,75,77,81,99,100,103,132,157,184,205,222,233,239,250,265,282,],[16,16,16,16,16,16,113,124,129,145,16,16,16,16,16,16,16,16,16,16,16,16,16,]),'list_structure':([0,3,4,7,49,51,99,100,103,132,150,157,184,205,222,233,239,250,265,282,],[17,17,17,17,17,17,17,17,17,17,187,17,17,17,17,17,17,17,17,17,]),'map_estructure':([0,3,4,7,49,51,99,100,103,132,157,184,205,222,233,239,250,265,282,],[18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,]),'map_assign':([0,3,4,7,49,51,99,100,103,132,157,184,205,222,233,239,250,265,282,],[19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'for_estructure':([0,3,4,7,49,51,99,100,103,132,157,184,205,222,233,239,250,265,282,],[20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,]),'structure':([0,3,4,7,49,51,99,100,103,132,157,184,205,222,233,239,250,265,282,],[21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,]),'function':([0,3,4,7,49,51,99,100,103,132,157,184,205,222,233,239,250,265,282,],[22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'parameters':([0,3,4,7,39,49,51,92,99,100,103,120,132,157,184,205,222,233,239,250,265,282,],[23,23,23,23,91,23,23,148,23,23,23,170,23,23,23,23,23,23,23,23,23,23,]),'variable_declaration':([0,3,4,7,49,51,99,100,103,132,157,184,205,222,233,239,250,265,282,],[24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'switch_structure':([0,3,4,7,49,51,99,100,103,132,157,184,205,222,233,239,250,265,282,],[25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'slice_structure':([0,3,4,7,49,51,99,100,103,132,157,184,205,222,233,239,250,265,282,],[26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'value':([0,3,4,6,7,30,41,49,51,61,62,75,77,81,99,100,103,106,132,133,137,147,150,153,157,173,175,184,192,203,205,210,222,223,227,230,233,239,248,250,253,255,261,265,272,277,278,282,],[31,31,31,54,31,80,96,31,31,112,115,125,130,144,31,31,31,54,31,80,183,54,186,194,31,54,54,31,54,115,31,80,31,80,54,54,31,31,259,31,264,115,271,31,281,115,115,31,]),'empty_list':([0,3,4,7,49,51,99,100,103,132,150,157,184,205,222,233,239,250,265,282,],[32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'list_with_data':([0,3,4,7,49,51,99,100,103,132,150,157,184,205,222,233,239,250,265,282,],[33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,]),'defined_list':([0,3,4,7,49,51,99,100,103,132,150,157,184,205,222,233,239,250,265,282,],[34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'for_initialization':([0,3,4,7,49,51,99,100,103,132,157,184,205,222,233,239,250,265,282,],[35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,]),'for_infinite_bucle':([0,3,4,7,49,51,99,100,103,132,157,184,205,222,233,239,250,265,282,],[36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,]),'for_iterator':([0,3,4,7,49,51,99,100,103,132,157,184,205,222,233,239,250,265,282,],[37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'parameter':([0,3,4,7,39,49,51,92,99,100,103,120,132,157,184,205,222,233,239,250,265,282,],[39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,]),'number':([0,3,4,6,7,30,41,49,51,61,62,75,77,81,99,100,103,106,132,133,137,147,150,153,157,173,175,184,192,203,205,210,222,223,227,230,233,239,248,250,253,255,261,265,272,277,278,282,],[42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,]),'values':([6,75,77,106,147,173,175,192,227,230,],[53,121,127,160,185,208,209,221,244,246,]),'type':([11,93,94,163,164,169,189,207,226,228,257,],[63,63,149,200,201,206,218,234,243,245,269,]),'conditions':([30,133,210,],[78,182,237,]),'condition':([30,133,210,223,],[79,79,79,241,]),'operator':([31,112,125,130,144,],[81,81,81,81,81,]),'double_operator':([31,112,125,130,144,264,],[82,82,82,82,82,274,]),'switch_expression':([41,],[95,]),'empty':([41,],[97,]),'values_import':([59,108,],[107,162,]),'string_value':([62,75,203,255,277,278,],[114,123,229,268,268,285,]),'append_statement':([64,],[117,]),'conditional_body':([78,178,237,263,],[131,211,251,273,]),'logical_operator':([79,],[133,]),'relational_operator':([80,],[137,]),'case_blocks':([152,191,],[190,220,]),'case_block':([152,191,],[191,191,]),'map_values':([255,277,],[266,284,]),'map_value':([255,277,],[267,267,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statement","S'",1,None,None,None),
  ('statement -> blocks','statement',1,'p_statement','analizadorSintactico.py',9),
  ('statement -> import blocks','statement',2,'p_statement','analizadorSintactico.py',10),
  ('statement -> package blocks','statement',2,'p_statement','analizadorSintactico.py',11),
  ('statement -> package import blocks','statement',3,'p_statement','analizadorSintactico.py',12),
  ('statement -> main LBRACE blocks RBRACE','statement',4,'p_statement','analizadorSintactico.py',13),
  ('statement -> package main LBRACE blocks RBRACE','statement',5,'p_statement','analizadorSintactico.py',14),
  ('statement -> import main LBRACE blocks RBRACE','statement',5,'p_statement','analizadorSintactico.py',15),
  ('statement -> package import main LBRACE blocks RBRACE','statement',6,'p_statement','analizadorSintactico.py',16),
  ('import -> <empty>','import',0,'p_import','analizadorSintactico.py',19),
  ('import -> IMPORT CHARSTRING','import',2,'p_import','analizadorSintactico.py',20),
  ('import -> IMPORT LPAREN values_import RPAREN','import',4,'p_import','analizadorSintactico.py',21),
  ('values_import -> CHARSTRING','values_import',1,'p_values_import','analizadorSintactico.py',24),
  ('values_import -> CHARSTRING values_import','values_import',2,'p_values_import','analizadorSintactico.py',25),
  ('package -> PACKAGE VARIABLE','package',2,'p_package','analizadorSintactico.py',28),
  ('main -> FUNCTION MAIN LPAREN RPAREN','main',4,'p_main','analizadorSintactico.py',31),
  ('blocks -> block','blocks',1,'p_blocks','analizadorSintactico.py',34),
  ('blocks -> block blocks','blocks',2,'p_blocks','analizadorSintactico.py',35),
  ('block -> print_statement','block',1,'p_block','analizadorSintactico.py',38),
  ('block -> input_statement','block',1,'p_block','analizadorSintactico.py',39),
  ('block -> conditional_structure','block',1,'p_block','analizadorSintactico.py',40),
  ('block -> operation','block',1,'p_block','analizadorSintactico.py',41),
  ('block -> list_structure','block',1,'p_block','analizadorSintactico.py',42),
  ('block -> map_estructure','block',1,'p_block','analizadorSintactico.py',43),
  ('block -> map_assign','block',1,'p_block','analizadorSintactico.py',44),
  ('block -> for_estructure','block',1,'p_block','analizadorSintactico.py',45),
  ('block -> structure','block',1,'p_block','analizadorSintactico.py',46),
  ('block -> function','block',1,'p_block','analizadorSintactico.py',47),
  ('block -> parameters','block',1,'p_block','analizadorSintactico.py',48),
  ('block -> variable_declaration','block',1,'p_block','analizadorSintactico.py',49),
  ('block -> switch_structure','block',1,'p_block','analizadorSintactico.py',50),
  ('block -> slice_structure','block',1,'p_block','analizadorSintactico.py',51),
  ('variable_declaration -> VAR VARIABLE type','variable_declaration',3,'p_variable_declaration','analizadorSintactico.py',55),
  ('variable_declaration -> VAR VARIABLE ASSIGN value','variable_declaration',4,'p_variable_declaration','analizadorSintactico.py',56),
  ('variable_declaration -> VAR VARIABLE ASSIGN list_structure','variable_declaration',4,'p_variable_declaration','analizadorSintactico.py',57),
  ('variable_declaration -> VARIABLE SHORTASSIGN value','variable_declaration',3,'p_variable_declaration','analizadorSintactico.py',58),
  ('variable_declaration -> VARIABLE SHORTASSIGN operation','variable_declaration',3,'p_variable_declaration','analizadorSintactico.py',59),
  ('structure -> TYPE VARIABLE STRUCT LBRACE statement RBRACE','structure',6,'p_structure','analizadorSintactico.py',62),
  ('function -> FUNCTION VARIABLE LPAREN RPAREN LBRACE blocks RBRACE','function',7,'p_function','analizadorSintactico.py',66),
  ('function -> FUNCTION VARIABLE LPAREN parameters RPAREN LBRACE blocks RBRACE','function',8,'p_function','analizadorSintactico.py',67),
  ('function -> FUNCTION VARIABLE LPAREN RPAREN type LBRACE RETURN value RBRACE','function',9,'p_function','analizadorSintactico.py',68),
  ('function -> FUNCTION VARIABLE LPAREN parameters RPAREN type LBRACE RETURN value RBRACE','function',10,'p_function','analizadorSintactico.py',69),
  ('function -> FUNCTION VARIABLE LPAREN parameters RPAREN type LBRACE blocks RETURN value RBRACE','function',11,'p_function','analizadorSintactico.py',70),
  ('values -> value','values',1,'p_values','analizadorSintactico.py',74),
  ('values -> value COMMA values','values',3,'p_values','analizadorSintactico.py',75),
  ('string_value -> value','string_value',1,'p_string_value','analizadorSintactico.py',78),
  ('string_value -> CHARSTRING','string_value',1,'p_string_value','analizadorSintactico.py',79),
  ('value -> VARIABLE','value',1,'p_value','analizadorSintactico.py',82),
  ('value -> number','value',1,'p_value','analizadorSintactico.py',83),
  ('value -> CHARSTRING','value',1,'p_value','analizadorSintactico.py',84),
  ('number -> INT','number',1,'p_number','analizadorSintactico.py',87),
  ('number -> FLOAT','number',1,'p_number','analizadorSintactico.py',88),
  ('print_statement -> PRINT LPAREN values RPAREN','print_statement',4,'p_print_statement','analizadorSintactico.py',92),
  ('print_statement -> PRINT LPAREN string_value RPAREN','print_statement',4,'p_print_statement','analizadorSintactico.py',93),
  ('print_statement -> PRINTF LPAREN FORMATSTRING COMMA values RPAREN','print_statement',6,'p_print_statement','analizadorSintactico.py',94),
  ('print_statement -> PRINT LPAREN string_value COMMA values RPAREN','print_statement',6,'p_print_statement','analizadorSintactico.py',95),
  ('print_statement -> PRINT LPAREN operation RPAREN','print_statement',4,'p_print_statement','analizadorSintactico.py',96),
  ('print_statement -> PRINT LPAREN RPAREN','print_statement',3,'p_print_statement','analizadorSintactico.py',97),
  ('input_statement -> INPUT LPAREN values RPAREN','input_statement',4,'p_input_statement','analizadorSintactico.py',101),
  ('input_statement -> INPUT LPAREN operation RPAREN','input_statement',4,'p_input_statement','analizadorSintactico.py',102),
  ('input_statement -> INPUT LPAREN RPAREN','input_statement',3,'p_input_statement','analizadorSintactico.py',103),
  ('operation -> value operator value','operation',3,'p_operation','analizadorSintactico.py',107),
  ('operation -> value operator operation','operation',3,'p_operation','analizadorSintactico.py',108),
  ('operation -> value double_operator','operation',2,'p_operation_single','analizadorSintactico.py',111),
  ('operator -> PLUS','operator',1,'p_operator','analizadorSintactico.py',114),
  ('operator -> MINUS','operator',1,'p_operator','analizadorSintactico.py',115),
  ('operator -> TIMES','operator',1,'p_operator','analizadorSintactico.py',116),
  ('operator -> DIVIDE','operator',1,'p_operator','analizadorSintactico.py',117),
  ('operator -> ASSIGN','operator',1,'p_operator','analizadorSintactico.py',118),
  ('double_operator -> INCREMENT','double_operator',1,'p_double_operator','analizadorSintactico.py',121),
  ('double_operator -> DECREMENT','double_operator',1,'p_double_operator','analizadorSintactico.py',122),
  ('parameters -> parameter','parameters',1,'p_parameters','analizadorSintactico.py',127),
  ('parameters -> parameter parameters','parameters',2,'p_parameters','analizadorSintactico.py',128),
  ('parameters -> parameter COMMA parameters','parameters',3,'p_parameters','analizadorSintactico.py',129),
  ('parameter -> VARIABLE type','parameter',2,'p_parameter','analizadorSintactico.py',133),
  ('type -> INT','type',1,'p_type','analizadorSintactico.py',136),
  ('type -> INT32','type',1,'p_type','analizadorSintactico.py',137),
  ('type -> INT64','type',1,'p_type','analizadorSintactico.py',138),
  ('type -> STRING','type',1,'p_type','analizadorSintactico.py',139),
  ('type -> FLOAT','type',1,'p_type','analizadorSintactico.py',140),
  ('type -> FLOAT32','type',1,'p_type','analizadorSintactico.py',141),
  ('type -> FLOAT64','type',1,'p_type','analizadorSintactico.py',142),
  ('type -> BOOL','type',1,'p_type','analizadorSintactico.py',143),
  ('conditional_structure -> IF conditions conditional_body','conditional_structure',3,'p_conditional_structure','analizadorSintactico.py',151),
  ('conditional_structure -> IF conditions conditional_body ELSE conditional_body','conditional_structure',5,'p_conditional_structure','analizadorSintactico.py',152),
  ('conditional_structure -> IF conditions conditional_body ELSE IF conditions conditional_body ELSE conditional_body','conditional_structure',9,'p_conditional_structure','analizadorSintactico.py',153),
  ('conditional_body -> LBRACE statement RBRACE','conditional_body',3,'p_conditional_body','analizadorSintactico.py',155),
  ('conditional_body -> LBRACE BREAK RBRACE','conditional_body',3,'p_conditional_body','analizadorSintactico.py',156),
  ('conditional_body -> LBRACE CONTINUE RBRACE','conditional_body',3,'p_conditional_body','analizadorSintactico.py',157),
  ('conditions -> condition','conditions',1,'p_conditions','analizadorSintactico.py',160),
  ('conditions -> condition logical_operator conditions','conditions',3,'p_conditions','analizadorSintactico.py',161),
  ('condition -> value relational_operator value','condition',3,'p_condition','analizadorSintactico.py',165),
  ('logical_operator -> AND','logical_operator',1,'p_logical_operator','analizadorSintactico.py',168),
  ('logical_operator -> OR','logical_operator',1,'p_logical_operator','analizadorSintactico.py',169),
  ('logical_operator -> NOT','logical_operator',1,'p_logical_operator','analizadorSintactico.py',170),
  ('relational_operator -> GREATER','relational_operator',1,'p_relational_operator','analizadorSintactico.py',173),
  ('relational_operator -> LESS','relational_operator',1,'p_relational_operator','analizadorSintactico.py',174),
  ('relational_operator -> GREATEREQUALS','relational_operator',1,'p_relational_operator','analizadorSintactico.py',175),
  ('relational_operator -> LESSEQUALS','relational_operator',1,'p_relational_operator','analizadorSintactico.py',176),
  ('relational_operator -> EQUALS','relational_operator',1,'p_relational_operator','analizadorSintactico.py',177),
  ('relational_operator -> DIFFERENT','relational_operator',1,'p_relational_operator','analizadorSintactico.py',178),
  ('for_estructure -> for_initialization','for_estructure',1,'p_for_estructure','analizadorSintactico.py',185),
  ('for_estructure -> for_infinite_bucle','for_estructure',1,'p_for_estructure','analizadorSintactico.py',186),
  ('for_estructure -> for_iterator','for_estructure',1,'p_for_estructure','analizadorSintactico.py',187),
  ('for_initialization -> FOR VARIABLE SHORTASSIGN value SEMICOLON condition SEMICOLON value double_operator LBRACE statement RBRACE','for_initialization',12,'p_for_initialization','analizadorSintactico.py',190),
  ('for_infinite_bucle -> FOR LBRACE statement RBRACE','for_infinite_bucle',4,'p_for_infinite_bucle','analizadorSintactico.py',193),
  ('for_iterator -> FOR VARIABLE SEMICOLON VARIABLE SHORTASSIGN RANGE VARIABLE LBRACE statement RBRACE','for_iterator',10,'p_for_iterator','analizadorSintactico.py',196),
  ('switch_structure -> SWITCH switch_expression LBRACE case_blocks RBRACE','switch_structure',5,'p_switch_structure','analizadorSintactico.py',201),
  ('switch_expression -> value','switch_expression',1,'p_switch_expression','analizadorSintactico.py',204),
  ('switch_expression -> empty','switch_expression',1,'p_switch_expression','analizadorSintactico.py',205),
  ('case_blocks -> case_block','case_blocks',1,'p_case_blocks','analizadorSintactico.py',208),
  ('case_blocks -> case_block case_blocks','case_blocks',2,'p_case_blocks','analizadorSintactico.py',209),
  ('case_block -> CASE values COLON statement','case_block',4,'p_case_block','analizadorSintactico.py',212),
  ('case_block -> DEFAULT COLON statement','case_block',3,'p_case_block','analizadorSintactico.py',213),
  ('empty -> <empty>','empty',0,'p_empty','analizadorSintactico.py',217),
  ('list_structure -> empty_list','list_structure',1,'p_list_structure','analizadorSintactico.py',225),
  ('list_structure -> list_with_data','list_structure',1,'p_list_structure','analizadorSintactico.py',226),
  ('list_structure -> defined_list','list_structure',1,'p_list_structure','analizadorSintactico.py',227),
  ('empty_list -> LBRACE RBRACE','empty_list',2,'p_empty_list','analizadorSintactico.py',231),
  ('list_with_data -> LBRACE values RBRACE','list_with_data',3,'p_list_with_data','analizadorSintactico.py',234),
  ('defined_list -> TYPE VARIABLE LBRACE values RBRACE','defined_list',5,'p_defined_list','analizadorSintactico.py',237),
  ('map_estructure -> VARIABLE SHORTASSIGN MAP LBRACKET type RBRACKET type LBRACE map_values RBRACE','map_estructure',10,'p_map_estructure','analizadorSintactico.py',243),
  ('map_estructure -> VARIABLE SHORTASSIGN MAKE LPAREN MAP LBRACKET type RBRACKET type RPAREN','map_estructure',10,'p_map_estructure','analizadorSintactico.py',244),
  ('map_values -> map_value','map_values',1,'p_map_values','analizadorSintactico.py',247),
  ('map_values -> map_value COMMA map_values','map_values',3,'p_map_values','analizadorSintactico.py',248),
  ('map_value -> string_value COLON string_value','map_value',3,'p_map_value','analizadorSintactico.py',251),
  ('map_assign -> VARIABLE LBRACKET string_value RBRACKET ASSIGN string_value','map_assign',6,'p_map_assign','analizadorSintactico.py',254),
  ('slice_structure -> VARIABLE SHORTASSIGN LBRACKET RBRACKET type LBRACE values RBRACE','slice_structure',8,'p_slice_structure','analizadorSintactico.py',259),
  ('slice_structure -> VAR VARIABLE LBRACKET RBRACKET type','slice_structure',5,'p_slice_structure','analizadorSintactico.py',260),
  ('slice_structure -> VARIABLE SHORTASSIGN LBRACKET RBRACKET type','slice_structure',5,'p_slice_structure','analizadorSintactico.py',261),
  ('slice_structure -> VARIABLE ASSIGN append_statement','slice_structure',3,'p_slice_structure','analizadorSintactico.py',262),
  ('append_statement -> APPEND LPAREN VARIABLE COMMA values RPAREN','append_statement',6,'p_append_statement','analizadorSintactico.py',265),
]
